#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass classicthesis
\begin_preamble
\pagestyle{scrheadings}
\pagenumbering{arabic}
\usepackage{pdfpages}
%\usepackage{amsmath}
\usepackage[left=1.35in,right=1.9in,top=1in,bottom=1in]{geometry}
\renewcommand\[{\begin{equation}}
\renewcommand\]{\end{equation}}
\end_preamble
\options twoside,fontsize=11pt,paper=a4,openright,titlepage,numbers=noenddot,headinclude=true,BCOR=5mm,footinclude=false,cleardoublepage=empty
\use_default_options false
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 4cm
\bottommargin 5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard

\lang american
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frenchspacing
\end_layout

\begin_layout Plain Layout


\backslash
raggedbottom
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
cfoot{
\backslash
tiny 
\backslash
sc Nagarjuna Kumarappan - Machine Learning, Data Mining and High Performance
 Computing, 2012}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang american
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includepdf[pages={1}]{cover.pdf}
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\lang american
\begin_inset Newpage cleardoublepage
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
includepdf[pages={2,{}}]{cover.pdf}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{plain}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Chapter*
Executive Summary
\end_layout

\begin_layout Standard
There are two components to this project.
 The first is the introduction of a neuroscience software toolbox for MATLAB
\noun on
 
\noun default
called 
\noun on
ReconTool
\noun default
 (Reconstruction Toolbox).
 It makes use of a flexible machine learning algorithm to learn from an
 animal's neural activity and position during spatial tasks in a maze, to
 reconstruct the trajectory of the animal given novel spike trains.
 Considering the relatively high computational and time complexity of decoding
 algorithms in general, the toolbox aims to provide a fast and simple way
 for training and reconstruction on any type of data set.
 The software is primarily developed for neuroscientists as there are no
 freely available tools for decoding neural correlates.
 The reconstruction algorithm uses Bayesian inference, as described by 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

.
 Several visualization and analysis methods were also developed, for data
 both before and after reconstruction.
 
\noun on
ReconTool 
\noun default
can be downloaded online with detailed documentation from http://www.cs.bris.ac.uk
\end_layout

\begin_layout Standard
The second component of the project is the analysis of data recorded from
 rats navigating a spatial task involving decision making.
 This analysis would not have been possible without 
\noun on
ReconTool
\noun default
.
 Several models were trained on the data, to study the accuracy of reconstructio
n and also the parameters that affect it.
 Though the reconstruction algorithm was found to have a high level of accuracy,
 deviations between reconstructed positions and actual positions were found
 primarily to occur at the reward points, and when the animal slows down
 at junctions with a choice turn.
 These results indicate non-local sequential activity occurs when the animal
 is stationary or slow moving, suggesting the occurrences of preplay and
 replay at these points.
\end_layout

\begin_layout Chapter*
Acknowledgments
\end_layout

\begin_layout Standard
I am extremely grateful to Rafal Bogacz, for his constant guidance and support
 throughout the course of the project.
 
\end_layout

\begin_layout Standard
And today
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard

\size small
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard

\lang american
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\begin_layout Plain Layout


\backslash
pagestyle{scrheadings}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This chapter provides a quick background on relevant topics in neuroscience,
 before describing the aims and objectives the project, followed by the
 general structure of this report.
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Standard
The hippocampus of the brain is responsible for several functions including
 memory consolidation, navigation, and location and spatial awareness.
 Certain regions of the hippocampus consist of specialized cells known as
 pyramidal cells, which are believed to play a role in cognitive ability.
 Some of the pyramidal cells of the hippocampus act as 
\emph on
place cells
\emph default
.
\end_layout

\begin_layout Subsection
Place cells and place fields
\end_layout

\begin_layout Standard
Place cells are neurons that exhibit activity when the animal is in certain
 specific locations in its environment, and seldom activate when anywhere
 else.
 These regions at which place cells fire are known as 
\emph on
place fields
\emph default
.
 Some place cells have been found to show activity only when the animal
 visits the respective place fields from certain directions, while some
 are more active in mazes with physical constraints such as spiral pathways,
 than in free roaming arenas 
\begin_inset CommandInset citation
LatexCommand citep
key "Markus1995"

\end_inset

.
 These neurons are not independent of each other, and sometimes fire together
 with other similar cells.
 Thus, more information can be gleaned from an ensemble of place cells than
 can be from a single cell 
\begin_inset CommandInset citation
LatexCommand citep
key "Brown1998,Harris2003"

\end_inset

.
\end_layout

\begin_layout Subsection
Reactivation: Replay and Preplay
\end_layout

\begin_layout Standard

\emph on
Replay
\emph default
, or reactivation, is the phenomenon where place cells that were active
 only during exposure to their corresponding place fields, exhibit sequential
 activity in the same order during the subsequent sleep following the experiment.
 There have been several studies focused on replay in the hippocampus, and
 it has been found to occur at faster timescales, both in forward and reverse
 directions, and has also been observed during awake rest 
\begin_inset CommandInset citation
LatexCommand citep
key "Diba2007,Foster2006,Euston2007"

\end_inset

.
 Replay in the hippocampus is generally linked to memory consolidation of
 recently gained experiences 
\begin_inset CommandInset citation
LatexCommand citep
key "O'Neill2010"

\end_inset

.
\end_layout

\begin_layout Standard
Recently, another type of offline sequential activity (OSA)
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Offline sequential activity(OSA) is 
\begin_inset Quotes eld
\end_inset

the generation of internal sequential activation of cells in the brain,
 that may or may not correspond to previous experiences driven by sensory
 input.
\begin_inset Quotes erd
\end_inset

 This term was first introduced in 
\begin_inset CommandInset citation
LatexCommand cite
key "Buhry2011"

\end_inset

 to refer to all kinds of sequential activity in the brain during both sleep
 and awake rest.
\end_layout

\end_inset

 has been discovered, one that does not correspond to past experiences,
 but rather future experiences not yet experienced by the animal 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007,Dragoi2011,Gupta2010"

\end_inset

.
 The sequence of firing of place cells during a novel run has been shown
 to correspond to sequential activity recorded even before it was navigated.
 It has also been observed in maze based tasks that require the rodent to
 make a decision at a junction 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset

, suggesting that the animal mentally explores trajectories before carrying
 out a decision.
 This sequential play of place cells corresponding to future experiences
 is termed as 
\emph on
preplay
\emph default
.
\end_layout

\begin_layout Section
Aims and Objectives
\end_layout

\begin_layout Standard
There are two main aims to this project.
 The first is to develop a user friendly software toolbox that uses a machine
 learning algorithm to learn from the position and spiking activity of place
 cells, to subsequently decode trajectories given novel spike trains.
 The toolbox aims to allow users to train models and perform reconstructions
 on different sets of data, and thus help 
\lang british
analyse
\lang english
 sequential activity and identify occurrences of OSA.
 The second aim is to use the toolbox on data recorded from rats navigating
 a spatial maze during a decision making task, to study the accuracy of
 reconstruction and the factors that affect it, and to look for interesting
 sequential activity.
\end_layout

\begin_layout Subsection
Software Objectives
\end_layout

\begin_layout Itemize
To create a system for training and reconstructing an animal's trajectory
 using a machine learning algorithm.
\end_layout

\begin_layout Itemize
A modular structure, enabling components, such as the core algorithm, to
 be modified easily or swapped with another.
\end_layout

\begin_layout Itemize
Methods to visualize the data, both before and after reconstruction.
\end_layout

\begin_layout Itemize
Cross validation and other methods to evaluate the quality of a reconstruction
 model.
\end_layout

\begin_layout Itemize
Compatibility with a wide range of data sets from mazes of different sizes.
\end_layout

\begin_layout Subsection
Analysis Objectives
\end_layout

\begin_layout Itemize
To use the software toolbox on data recorded from rats navigating the T-maze
 decision task by 
\begin_inset CommandInset citation
LatexCommand citet
key "Jones2005"

\end_inset

.
\end_layout

\begin_layout Itemize
To evaluate the reconstruction accuracy, and to study the parameters that
 affect it.
\end_layout

\begin_layout Itemize
To identify locations where significant deviations occur between the actual
 and reconstructed position.
\end_layout

\begin_layout Section
Structure of the report
\end_layout

\begin_layout Standard
The report is divided into six main sections including this introductory
 chapter.
 Chapter 2 (
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Theoretical-background"

\end_inset

) is a review of the literature and research surrounding sequential activity
 in hippocampal neurons of rodents, and different decoding methods and technique
s.
 In chapter 3 (
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Implementation"

\end_inset

), the basic structure and implementation of the toolkit is described, along
 with the core algorithm and improvements made to it.
 Chapter 4 (
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Analysis-using-ReconTool"

\end_inset

) describes the analysis and results of using the toolbox on the data from
 the T-maze task.
 A review and critical evaluation of the project is carried out in chapter
 5 (
\begin_inset CommandInset ref
LatexCommand nameref
reference "chap:Discussion"

\end_inset

).
\end_layout

\begin_layout Chapter
Theoretical background
\begin_inset CommandInset label
LatexCommand label
name "chap:Theoretical-background"

\end_inset


\end_layout

\begin_layout Standard
This chapter is a review on existing literature and research on different
 kinds of sequential activity found in the hippocampal place cells of rodents.
 On the topic of decoding spiking activity, different decoding methods and
 algorithms are explored, providing the theoretical framework for developing
 a software for reconstruction.
\end_layout

\begin_layout Section
Sequential activity of neurons
\end_layout

\begin_layout Standard
The hippocampus is responsible for spatial and location awareness, among
 other functions.
 There exist specialized hippocampal cells that fire only when the animal
 visits specific regions in the environment.
 These cells are known as place cells, and the corresponding fields where
 they exhibit activity are called place fields.
 These place cells do not fire independently; sometimes they fire in bursts
 with other place cells.
 Therefore, it is possible to glean more information from an ensemble of
 cells rather than just a single place cell
\begin_inset CommandInset citation
LatexCommand citep
key "Brown1998"

\end_inset

.
 The primary aim of this project is to create a software that decodes the
 location of the animal.
\end_layout

\begin_layout Standard
Decoding involves reconstructing the location of the animal from the spiking
 activity of an ensemble of place cells.
 There are several methods for decoding spike trains, some of which are
 explored in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Decoding-neural-activity"

\end_inset

.
 Reconstructed sequences sometimes represent the actual location of the
 animal (local), and sometimes represent other locations in the environment
 (non-local).
 Local sequential activity can be understood as a result of the animal visiting
 a specific region or place field, but non-local activity potentially represents
 more complex biological processes, such as 
\emph on
replay
\emph default
 and 
\emph on
preplay
\emph default
.
\end_layout

\begin_layout Subsection
Replay
\end_layout

\begin_layout Standard
Reactivation, or 
\emph on
replay
\emph default
, is the repeat of sequential activity of place cells that fired during
 exploration.
 In the study carried out by Pavlides and Winson (1989)
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Pavlides and Winson 1989, add citation
\end_layout

\end_inset

 , neural spiking activity of cells that showed activity in specific regions
 (place fields) were recorded.
 Data was recorded as the animal navigated through the place field (exposure)
 and also through restricted regions not containing the place field (non-exposur
e).
 It was shown that these place cells seldom fired during the non-exposure
 condition.
 However, during the subsequent sleep that followed the experiment, reactivation
 of the place cells was observed, suggesting that the hippocampus plays
 a role in memory consolidation during sleep, and in learning about new
 places and spaces.
\end_layout

\begin_layout Subsection
Preplay
\end_layout

\begin_layout Standard
Some non-local sequential activation observed during sleep and during awake
 rest did not correspond to past experiences, but rather future experiences
 the animal had yet to experience
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007,Dragoi2011"

\end_inset

.
 These future play of cells suggests that pathways are mentally explored
 even before are actually traveled.
 This kind of mental exploration is termed as 
\emph on
preplay
\emph default
.
 Interestingly, it has been observed during the prior sleep before the animal
 is exposed to a completely new environment (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Preplay-occurences-on"

\end_inset

), and also during moments of awake rest at choice points in familiar environmen
ts (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Preplay-occurences-at"

\end_inset

).
\end_layout

\begin_layout Section
Preplay occurrences on novel tracks
\begin_inset CommandInset label
LatexCommand label
name "sec:Preplay-occurences-on"

\end_inset


\end_layout

\begin_layout Standard
In the experiment carried out by 
\begin_inset CommandInset citation
LatexCommand citet
key "Dragoi2011"

\end_inset

, rats were trained on a linear track, until they were made familiar with
 it.
 During the sleep that followed, sequences were observed that did not correspond
 to previously visited pathways, but some other mental exploration not yet
 mapped.
 In the following runs carried out, a new arm was attached to one of the
 ends.
 When the rat explored the newer areas of the map, the same sequences that
 were observed during sleep were observed again, suggesting that some sequential
 activity in the brain corresponds to future play, rather than just past
 experiences.
 The experiment carried out here shows the nature of preplay and how they
 could actually be a way of exploration by the brain, and preparation to
 learn new memories 
\begin_inset CommandInset citation
LatexCommand citep
key "Buhry2011"

\end_inset

.
\end_layout

\begin_layout Section
Preplay occurrences at decision points
\begin_inset CommandInset label
LatexCommand label
name "sec:Preplay-occurences-at"

\end_inset


\end_layout

\begin_layout Standard
In this section, the study carried out by 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset

 on the presence of sequential activity at critical decision points is reviewed.
 The experiment was carried out on place cells from the CA3 region of the
 hippocampus of rodents, running in a maze of approximately 165 x 165 cm
 large.
 There are two main lap-based tasks in the experiment, both of which are
 based on T-type junctions which the rat has to navigate through.
 
\end_layout

\begin_layout Subsection
T-based tasks
\end_layout

\begin_layout Standard
The first task, the multiple T-task (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Multiple-T-task"

\end_inset

), consists of four T-junctions that the animal has to navigate.
 This task is identical to the one devised in 
\begin_inset CommandInset citation
LatexCommand citep
key "Schmitzer-Torbert2004"

\end_inset

.
 The first three junctions are of low importance, as they merely lead to
 dead ends which the animal can recover easily from, but the final decision
 is critical, as it chooses one of two return rails back to the start point.
 Both the return rails have feeders where the animal is delivered food pellets
 as rewards, but only the feeders on one return rail are activated during
 training and the actual runs, thus making one path favorable over the other.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/mutiplet.png
	lyxscale 50
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\emph on
Multiple T-task
\emph default
 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Multiple-T-task"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size small
Figure taken from 
\begin_inset CommandInset citation
LatexCommand citep
key "Schmitzer-Torbert2004"

\end_inset

, identical to the task in (Johnson & Redish, 2007) - Consists of four T
 junctions, the last of which decides which return rail, either left or
 right, the animal returns to the start in.
 There are two reward points on either side, but only a pair is active at
 one testing session.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The second task, is a cued-choice task (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Cued-choice-task"

\end_inset

), which consists of a single T-junction in which both the branches are
 return rails that end back to the initial position.
 Like the previously described task, only one of the return rails is reinforced
 with a reward.
 In this task however, a audible cue is delivered to aid the rodent to make
 the correct turn at the junction point.
 A tone is played at the central arm before the junction in either a high
 or low frequency.
 A high frequency tone indicates that the left path is the 'correct' path
 that has active reward sites, while the low frequency indicates the path
 on the right has active reward sites.
 If the rat makes the right decision based on this cue, then the same cue
 is played again as it begins its run down the return rail.
 If it does not hear the tone the second time, it implies that the decision
 was made incorrectly, and is on the rail that does not provided reward.
 This provides the opportunity for the animal to correct an incorrect turn
 at the choice point.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/cuedT.png
	lyxscale 50
	scale 50

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Cued-choice task 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Cued-choice-task"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size small
The task consists of one junction point, which leads to two return rails
 back to the start.
 An audible tone is played twice that acts as the cue, once at the central
 arm, before the choice point, and one as reinforcement, at the secondary
 sites, if the rat has chosen the right direction.
 The frequency of the tone determines the direction the rat should take
 (high and low frequency mean left and right turns respectively)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Forward sweeps at decision points
\end_layout

\begin_layout Standard
To find the location encoded by the place cells, 
\begin_inset CommandInset citation
LatexCommand citet
key "Johnson2007"

\end_inset

 used a Bayesian reconstruction method.
 The reconstruction algorithm was suitably modified to allow for faster
 timescales, as sequential activity are compressed by a factor of up to
 7 times in the brain 
\begin_inset CommandInset citation
LatexCommand citep
key "Euston2007"

\end_inset

.
 By decoding the location encoded by the hippocampal place cells, it is
 possible to determine the location as perceived by the animal.
 This allows for observations of both local and non-local representations
 of the rodent.
 The choice point was defined as a small rectangular area just before the
 T-junction.
 The animal is said to enter the choice point as it enters the box, and
 exits as it leaves through the north after making a decision.
 Reconstruction yielded interesting results at the choice points.
 At these critical choice points, forward sweeps of neural ensembles were
 observed.
 If the reconstructed location and the actual position of the animal deviated
 by a predetermined amount, it was classified as a non-local activation.
 At the choice points, the place cells tended to fire ahead of the animal,
 rather than behind (backward sweeps indicate past experience, or replay).
 It should be noted that, there were certain non-local sequence reconstructions
 that did not fit in with the environment, and were subsequently eliminated
 from the data set and from further analysis.
\end_layout

\begin_layout Subsection
Experimental results
\end_layout

\begin_layout Standard
In the multiple T-task, the reconstructed position of the rat began to sweep
 forward at the choice point of the final T junction, first down one branch
 path, and then down the other.
 When the rats were first introduced to the environment, their performance
 was merely based on chance, but as the number of laps progressed, performance
 significantly improved.
 In the cued-choice task, it was observed that the rats chose the right
 path 
\begin_inset Formula $70\%$
\end_inset

 of the time based on the cue signal, and on cases where the wrong decision
 was made, the rats quickly recovered once the audio tone was not played
 at the secondary sites.
 Forward sweeps were observed at this point as well, when the animal realizes
 its mistake and begins to turn around.
\end_layout

\begin_layout Standard
The most interesting results that I inferred from these experiments are
\end_layout

\begin_layout Enumerate
The forward sweeps occur at the paths one at a time, and does not grow outward
 simultaneously.
 This suggests that the rat, once it enters the choice point, mentally navigates
 the the two branches before deciding on which one to take.
 Preplay has been observed in linear L-shaped tracks 
\begin_inset CommandInset citation
LatexCommand citep
key "Dragoi2011"

\end_inset

, but it is interesting to observe this behavior at critical decision points,
 such as the T-junction, as this gives an idea of the role of hippocampus
 in navigation and prediction, and how it may aid in the decision making
 process.
\end_layout

\begin_layout Enumerate
In the analysis carried out by 
\begin_inset CommandInset citation
LatexCommand citet
key "Johnson2007"

\end_inset

, the correlation between the directions of the forward sweeps and actual
 turn decision made by the animal in the cued-choice task was studied.
 Despite there being a link between the direction of forward sweeps and
 the orientation of motion, there were also turns when these two directions
 did not agree with each other.
 This supports the idea that the hippocampus does not play a role in the
 actual process of decision making, but simply 'plays out' predictions and
 mentally explores the map.
 Analysis of these predictions, and the decision making process based on
 these mental explorations, are carried out by another part of the brain,
 namely the prefrontal cortex.
\end_layout

\begin_layout Enumerate
The reconstruction framework implemented works really well to predict the
 local representation of the animal, and during non-local representations,
 it fades away as the sweep progresses.
 The places cells initially encode strongly the location of the rat at beginning
 of the sweep, and smoothly decreases as it progresses.
 There were also representations that did not fit in with the map of the
 environment.
 As they more likely caused by noise in the data, they were eliminated from
 further analysis.
 
\end_layout

\begin_layout Standard
Based on these inferences, it would be very interesting to look for similar
 sequential activity in the data recorded from 
\begin_inset CommandInset citation
LatexCommand citep
key "Jones2005"

\end_inset

.
 While the specific area of study of the experiments differ, the experimental
 set up is very similar in the fact that the rodent has to navigate a maze
 with a decision point, and correct decisions are positively reinforced.
\end_layout

\begin_layout Section
Jones & Wilson T-maze task
\begin_inset CommandInset label
LatexCommand label
name "sec:Jones-&-Wilson"

\end_inset


\end_layout

\begin_layout Standard
The main aim of this experiment by 
\begin_inset CommandInset citation
LatexCommand citet
key "Jones2005"

\end_inset

 was to investigate the possibility of theta rhythms acting as a clocking
 signal to coordinate brain activity during decision making in a spatial
 task.
 The experimental setup (figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:T-maze-task"

\end_inset

) was designed in order to provide two types of trials, one being a choice
 trial where the rodent has to make a decision, and the second a forced
 trial, where the animal is guided by a temporary barrier.
\end_layout

\begin_layout Standard
In any choice trial, the rat begins from the left side of the maze, and
 makes its way to the right.
 The animal can begin from either R1 or R2.
 As the animal moves towards the central arm, the entry to the other site
 on the left side is blocked by means of a movable barrier.
 This ensures that the animal follows the path into the central column and
 does not offer any choice of turn.
 The animal makes its way down the central arm, where it faces a choice
 point, where it either takes a left turn or a right, corresponding to sites
 R3 or R4.
 If the animal takes the same turn as it did at the forced turn, then the
 animal reaches its intended site.
 For instance, if the animal begins at R1, it takes a left turn into the
 central arm, and if it also makes a left turn at the choice point to reach
 R3, then it is positively reinforced with a reward.
 Similarly, the rodent is provided a reward when it reaches R4, if it begins
 from R2 (two right turns).
\end_layout

\begin_layout Standard
During the guided trial, the animal doesn't have to make a decision, and
 is guided to one of the sites on the left.
 If the animal begins the guided trial from R3, it is led to R1 using the
 movable barriers, and if it begins the trial at R4, it is led to R2.
 This trial served the purpose of recording data to compare neural data
 from the choice trials with, and also to prepare for the next choice trial.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/jones_T.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
T-maze task 
\begin_inset CommandInset citation
LatexCommand citep
key "Jones2005"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:T-maze-task"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\size small
Figure taken from 
\begin_inset CommandInset citation
LatexCommand citep
key "Jahans-Price2010"

\end_inset

.
 The rodent begins a run from either site R1 or R2, navigating its way to
 the other side of the maze.
 The first turn is a forced turn, guided by a barrier, while the the second
 is a choice point.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As a result of this experiment, it was shown that there was significant
 coherence in the theta rhythm range between 4-12hz, between the CA1 region
 of the hippocampus and the medial prefrontal cortex, during correct choice
 trials, than that of incorrect or guided trials.
 This result supports the idea that communication occurs between hippocampus,
 responsible for spatial navigation and mental exploration, and the prefrontal
 cortex, the decision center of the brain.
\end_layout

\begin_layout Standard
As the results of 
\begin_inset CommandInset citation
LatexCommand citet
key "Johnson2007"

\end_inset

 indicate, it can be expected to observe patterns of non-local activation
 of place cells in the data recorded in this task, especially at the choice
 points.
 The occurrences of replay are also likely to occur during moments of awake
 rest at the reward points.
\end_layout

\begin_layout Section
Decoding neural activity
\begin_inset CommandInset label
LatexCommand label
name "sec:Decoding-neural-activity"

\end_inset


\end_layout

\begin_layout Standard
Decoding is of particular importance to understanding how physical variables
 experienced by an animal are encoded in the brain.
 Different regions of the brain encode information responsible for different
 physical variables, such as the sight of a moving object, or the animal's
 awareness of its location in the environment.
 Decoding, also known as reconstruction, is the process of calculating these
 physical variables based on observed neural activity from different regions
 of the brain.
 For these reasons, decoding of neural activity is known as an inverse problem.
\end_layout

\begin_layout Standard
In this particular context, decoding the location of the animal based on
 the neural activity in the hippocampus is the primary focus.
 The hippocampus is responsible for encoding locational awareness of the
 animal.
 They consist of place cells, neurons that show bursts of activity when
 exposed to their corresponding place fields.
 Place fields are small areas in the environment within which the place
 cells show activity.
 Usually, place cells are silent for most of the remaining area, except
 when the animal is in the place fields 
\begin_inset CommandInset citation
LatexCommand citep
key "Diba2007"

\end_inset

.
\end_layout

\begin_layout Standard
There are several methods that are used for reconstruction.
 The two main widely used methods are linear based basis functions and probabili
stic based Bayesian classification methods, both of which have been studied
 and compared previously.
 Though this section will focus on the work done by 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

 in the comparison of different reconstruction methods, it should be noted
 that their work focuses only on local reconstruction.
 Non-local reconstruction is different from sequential activity driven by
 sensory input in a number of ways, most critical being the timescales at
 which it occurs in.
 This section details methods on decoding algorithms as shown by 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

, and also methods for faster timescale non-local sequential activity 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007,Johnson2008"

\end_inset

.
\end_layout

\begin_layout Subsection
Firing rates and spatial occupancy
\end_layout

\begin_layout Standard
For any kind of reconstruction method, the firing rates and tuning properties
 of the neurons must be quantified.
 Place cells simply fire at different times, and to make sense of it all,
 data processing must be carried out.
 By finding out properties like firing rates and cell occupancy, we can
 glean more information about place cells than just mere timing information.
 
\end_layout

\begin_layout Standard
For place cell reconstruction, the position of the animal is discretized
 into bins and sampled at a constant frequency.
 The position of the animal is represented by two variables, 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

, but for simplicity and reconstruction purposes, they are represented throughou
t this report by a position vector 
\begin_inset Formula $\mathbf{x}=(x,y)$
\end_inset

.
 While the reconstruction algorithms use a two coordinate system for representin
g location, using a single vector is simpler to represent.
\end_layout

\begin_layout Standard
In the study by 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

, the location
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
The location refers to the position of the head of the animal on the plane.
\end_layout

\end_inset

 of the animal was discretized onto a 
\begin_inset Formula $256\times256$
\end_inset

 grid sampled at a frequency of 20Hz.
 Most reconstruction methods discretize the data into a simple resolution
 of the order of several hundred units.
 By discretizing the area into bins, we can calculate the probability that
 the animal can be found in a bin at any given time.
 This is known as spatial occupancy, denoted by 
\begin_inset Formula $P(x)$
\end_inset

.
 For each bin, 
\begin_inset Formula $N(\mathbf{x})$
\end_inset

 refers to the number of instances the animal was found at the bin corresponding
 to 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x})=\frac{N(\mathbf{x})}{\sum_{\mathbf{x}}N(\mathbf{x})}
\]

\end_inset


\end_layout

\begin_layout Standard
The number of times a neuron fires in a specific unit of time is known as
 the firing rate, or the tuning function of the neuron.
 Both the firing rate, denoted by 
\begin_inset Formula $f(\mathbf{x})$
\end_inset

, and the spatial occupancy, are required for reconstruction.
 Since the location of the animal is now discretized and not continuous,
 it is possible to count the number of spikes that occur at a specific 
\begin_inset Formula $\mathbf{x}$
\end_inset

, here denoted by 
\begin_inset Formula $S(\mathbf{x})$
\end_inset

.
 Given the frequency of sampling 
\begin_inset Formula $\Delta t$
\end_inset

, and the spatial occupancy 
\begin_inset Formula $P(\mathbf{x})$
\end_inset

, the average firing rate at position 
\begin_inset Formula $\mathbf{x}$
\end_inset

 can be calculated as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(\mathbf{x})=\frac{S(\mathbf{x})}{N(\mathbf{x})\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
The above two distributions hold enough information to allow for basic decoding.
 The spatial occupancy tells how likely the animal visits the location bin,
 and the firing rate gives the behavior of the neuron, while the animal
 was in the specific location bin.
 Multiplying the frequency of sampling with the number of instances the
 animal was found at 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathbf{x}$
\end_inset

, we get the total time spent by the animal at 
\begin_inset Formula $\mathbf{x}$
\end_inset

, thus allowing us to calculate the firing rate.
 The firing rate distribution at any location is not affected by the total
 duration of the experiment or the total time spent on other locations,
 but instead only reflects the number of times it fires when the animal
 was present at that location.
 Similarly, the mean firing rate across all positions 
\begin_inset Formula $\mathbf{x}$
\end_inset

 can also be calculated
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f_{mean}=\frac{\sum_{\mathbf{x}}S(\mathbf{x})}{\sum_{\mathbf{x}}N(\mathbf{x})\Delta t}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\sum_{\mathbf{x}}S(\mathbf{x})$
\end_inset

 represents the total number of spikes at all locations, and 
\begin_inset Formula $\sum_{\mathbf{x}}N(\mathbf{x})\Delta t$
\end_inset

 represents the total duration of the experimental recording.
 Given this information, it is possible to define a spike as an event, and
 calculate the probability of the animal being found at a specific location
 given the knowledge that the spike occurs, through conditional probability.
 As shown by Zhang et al.,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x}|'spike')=\frac{S(\mathbf{x})}{\sum_{\mathbf{x}}S(\mathbf{x})}
\]

\end_inset


\end_layout

\begin_layout Standard
With the knowledge that a spike occurs for a cell, we can estimate a distributio
n of the places where it is most likely to have been fired in, and hence,
 in essence, provide the location of the animal.
 A single cell is never enough for successful reconstruction, but this is
 the basis of most reconstruction methods, that apply the same idea on ensembles
 of neurons and not single cells.
 Given these new variables, it is now possible to define the firing rate
 as functions of 
\begin_inset Formula $f_{mean}$
\end_inset

 and 
\begin_inset Formula $P(\mathbf{x}|'spike')$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(\mathbf{x})=f_{mean}\frac{P(\mathbf{x}|'spike')}{P(\mathbf{x})}
\]

\end_inset


\end_layout

\begin_layout Standard
All these properties have been found by discretizing the map and time into
 constant bins, and are crucial for any reconstruction method, as they encode
 information about the nature of firing of place cells and movement and
 speed of the animal.
 The regions of high activity, both by definition of neural activity, and
 by the times it is visited by the animal in an experiment, can be identified.
\end_layout

\begin_layout Subsection
Adaptive binning methods
\end_layout

\begin_layout Standard
While the method described above uses constant binning, there have been
 other methods of binning used, such as the 
\begin_inset Quotes eld
\end_inset

adaptive
\begin_inset Quotes erd
\end_inset

 binning technique described in 
\begin_inset CommandInset citation
LatexCommand citep
key "Skaggs1996"

\end_inset

.
 In their study, which focuses on the interactions between theta rhythms
 and the firing of pyramidal cells in the CA1 region of the hippocampus
 of rats, spatial binning was carried out in a comparatively smaller 
\begin_inset Formula $64\times64$
\end_inset

 grid, in a similarly sized experimental set up, but firing rates were calculate
d in way to reduce sampling error at the cost of spatial resolution.
 The firing rate at every locational bin was found by expanding a circle
 outward from that bin until the following condition was met
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
N_{spikes}>\frac{\alpha}{N_{occ}^{2}r^{2}}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $N_{spikes}$
\end_inset

 denotes the total number of spikes within the circle, 
\begin_inset Formula $r$
\end_inset

 being the radius of the circle, 
\begin_inset Formula $N_{occ}$
\end_inset

 is the number of occupancy samples recorded that fall within the circle,
 and 
\begin_inset Formula $\alpha$
\end_inset

 is the scaling factor that is dependent on the data (for the data set used
 in their paper, it was chosen to be 
\begin_inset Formula $1\times10^{6}$
\end_inset

).
 Once this condition is met, the firing rate assigned to the bin is equal
 to sampling rate frequency times 
\begin_inset Formula $(N_{spikes}/N_{occ})$
\end_inset

.
 In this technique, the level of error depends on the overall firing rate
 of the neuron, and a higher rate implies proportionally lesser error.
\end_layout

\begin_layout Standard
It should be noted that though this is a particularly accurate way of calculatin
g the firing rates, it's effect at faster time scales is questionable.
 While looking for local representations of location in the hippocampus,
 it can be used as a good method, but in the cases of non-local representation,
 which occurs in preplay and replay moments, this method might not be able
 to capture the firing rates at remote bins in a way that would be useful
 for interpretation.
\end_layout

\begin_layout Subsection
Firing rate modulation using velocity
\end_layout

\begin_layout Standard
While the firing rate and the spatial occupancy vectors alone are enough
 for reconstruction purposes, the firing rate can be further be modulated
 with other parameters beyond just position, such as the velocity of the
 animal and the direction of motion.
 In a freely moving rat, the velocity of direction of the animal moving
 does not have any effect on the firing rate of place cells in the hippocampus,
 but when the rat is placed in an environment with physical constraints
 such as a narrow linear path, the firing rate also depends on velocity
 and direction of the rat 
\begin_inset CommandInset citation
LatexCommand citep
key "McNaughton1983"

\end_inset

.
 By multiplying the firing rate with running velocity of the animal, both
 the effect of speed and direction can be modeled.
\end_layout

\begin_layout Standard
In the experiments conducted by 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998"

\end_inset

, there was only one direction to be considered, and hence only modulation
 with running velocity was implemented.
 The modified average firing rate is now represented as 
\begin_inset Formula $f(\mathbf{x},\mathbf{v})$
\end_inset

, which implies that the firing rate depends on both the location 
\begin_inset Formula $\mathbf{x}$
\end_inset

 and the velocity at that point of time 
\series bold

\begin_inset Formula $\mathbf{v}$
\end_inset


\series default
.
 If we consider velocity and the unmodulated firing rate as two independent
 functions, the modulated firing rate is represented as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(\mathbf{x},\mathbf{v})=F(\mathbf{x})G(\mathbf{v})
\]

\end_inset

where 
\begin_inset Formula $F(\mathbf{x})$
\end_inset

 is an independent function of 
\begin_inset Formula $\mathbf{x}$
\end_inset

 and 
\begin_inset Formula $G(\mathbf{v})$
\end_inset

is an independent function of 
\begin_inset Formula $\mathbf{v}$
\end_inset

.
 In the case of a simple linear velocity modulation, the firing rate can
 be represented as 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(\mathbf{x},\mathbf{v})=F(\mathbf{x})(av+b)
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 are both constants and 
\begin_inset Formula $G(\mathbf{v})=av+b$
\end_inset

 is a function of 
\begin_inset Formula $v=|\mathbf{v}|$
\end_inset

.
\end_layout

\begin_layout Section
Reconstruction methods
\end_layout

\begin_layout Subsection
Basis functions and pattern matching
\end_layout

\begin_layout Standard
One of the methods for reconstruction is using a linear combination of fixed
 templates or basis functions.
 The following section describes the implementation and performance of basis
 functions as described by 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

.
 The goal of using basis functions is to maximize probability of matching
 the neuron activity.
 
\begin_inset Formula $n_{i}$
\end_inset

 is defined as the number of spikes fired by the neuron 
\begin_inset Formula $i$
\end_inset

, within a set time window.
 For each neuron, an arbitrary template function 
\begin_inset Formula $\phi_{i}(\mathbf{x})$
\end_inset

 is defined.
 The linear sum
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{i}n_{i}\phi_{i}(\mathbf{x})
\]

\end_inset


\end_layout

\begin_layout Standard
is calculated, which is distributed all over the 2-dimensional space addressed
 by 
\begin_inset Formula $\mathbf{x}$
\end_inset

.
 The reconstructed location of the animal can be calculated by finding the
 peak position of the distribution.
 By finding the value that maximizes the following function, the reconstructed
 position 
\begin_inset Formula $\mathbf{x}_{basis}$
\end_inset

 can be found.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{x}_{basis}=\arg\max_{\mathbf{x}}\sum_{i}n_{i}\phi_{i}(\mathbf{x})
\]

\end_inset


\end_layout

\begin_layout Standard
The above mentioned basis function framework for reconstruction is in the
 core of other decoding techniques such as population vector methods and
 template matching methods 
\begin_inset CommandInset citation
LatexCommand citep
key "Wilson1993"

\end_inset

.
 It is worth noting that in the case of basis functions, a single most probable
 reconstructed location is produced, and not a range of possible locations
 with different probabilities, such as the case in Bayesian decoding methods.
 While the usage of these basis functions prove to be accurate reconstructions
 of physical variables such as location, it cannot produce accurate results
 when looking for non-local reconstruction.
 This is because, there are always place cells that encode the current location
 of the animal at any given point, including awake rest at choice points,
 and they outweigh any non-local representations of location that may be
 experienced by the animal.
 Identification of non-local representations of location and identifying
 forward sweeps is a job better suited for Bayesian decoders.
\end_layout

\begin_layout Subsection
Bayesian methods for reconstruction
\end_layout

\begin_layout Standard
This section will focus on the Bayesian reconstruction techniques that were
 studied by 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998"

\end_inset

, and also how these methods were implemented to identify preplay 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset

.
 As shown in the previous section, the firing rates and spatial occupancy
 for the animal at different locations 
\begin_inset Formula $\mathbf{x}$
\end_inset

 are calculated.
 The objective here is to reconstruct the location of the animal at any
 time 
\begin_inset Formula $t$
\end_inset

, given the number of spikes exhibited by these place cells within the time
 period between 
\begin_inset Formula $t-\tau/2$
\end_inset

 and 
\begin_inset Formula $t+\tau/2$
\end_inset

, where 
\begin_inset Formula $\tau$
\end_inset

 is the duration of the time window.
 Unlike basis methods, where a single reconstructed position is produced,
 this method produces a range of probabilities for the position, and the
 most probable position is chosen as the reconstructed location.
 Given the time window constraints, it is defined that 
\begin_inset Formula $\mathbf{n}=(n_{1},n_{2},n_{3},...,n_{N})$
\end_inset

, where 
\begin_inset Formula $n_{i}$
\end_inset

 is the number of spikes fired by neuron 
\begin_inset Formula $i$
\end_inset

.
 This method of reconstruction is based on the following standard Bayes
 rule of conditional probability,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x}|\mathbf{n})P(\mathbf{n})=P(\mathbf{n}|\mathbf{x})P(\mathbf{x})
\]

\end_inset


\end_layout

\begin_layout Standard
The objective of reconstruction is to calculate 
\begin_inset Formula $P(\mathbf{x}|\mathbf{n})$
\end_inset

, which is the probability of the animal being at position 
\begin_inset Formula $\mathbf{x}$
\end_inset

, given the number of spikes fired.
 
\begin_inset Formula $P(\mathbf{x})$
\end_inset

 is the probability the animal is in that specific locational bin at a given
 time, and this can be calculated experimentally through spatial occupancy.
 
\begin_inset Formula $P(\mathbf{n})$
\end_inset

 refers to the probability of 
\begin_inset Formula $n$
\end_inset

 number of spikes occurring.
 To calculate the probability of the number of spikes occurring, given the
 location of the animal, the firing rates for the different cells are needed.
 It is assumed 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998"

\end_inset

, for the sake of modeling, that the firing rates of each cells are 
\emph on
independent
\emph default
 of each other and follow a Poisson distribution.
 Under these assumptions, 
\begin_inset Formula $P(\mathbf{n}|\mathbf{x})$
\end_inset

can be calculated as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{n}|\mathbf{x})=\prod_{i=1}^{N}P(n_{i}|\mathbf{x})=\prod_{i=1}^{N}\frac{(\tau f_{i}(\mathbf{x}))^{n_{i}}}{n_{i}!}exp(-\tau f_{i}(x))
\]

\end_inset


\end_layout

\begin_layout Standard
Here, 
\begin_inset Formula $f_{i}(\mathbf{x})$
\end_inset

 is the average firing rate of the neuron 
\begin_inset Formula $i$
\end_inset

 at position 
\begin_inset Formula $\mathbf{x}$
\end_inset

, and 
\begin_inset Formula $\tau$
\end_inset

 is the duration of the time window.
 Using this above expression to calculate the final probability, we get
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x}|\mathbf{n})=C(\tau,\mathbf{n})P(\mathbf{x})\left(\prod_{i=1}^{N}f_{i}(\mathbf{x})^{n_{i}}\right)exp\left(-\tau\sum_{i=1}^{N}f_{i}(\mathbf{x})\right)
\]

\end_inset


\end_layout

\begin_layout Standard
To calculate the reconstructed position, the probability 
\begin_inset Formula $P(\mathbf{x}|\mathbf{n})$
\end_inset

 is calculated at each location bin, given the number of spikes that were
 fired within the time window.
 From the distribution, the peak is taken as the final reconstructed position
 of the animal.
 By increasing the time window 
\begin_inset Formula $\tau$
\end_inset

 forward, the location of the animal throughout the run can be reconstructed.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{Bayes}=\arg\max_{\mathbf{x}}P(\mathbf{x}|\mathbf{n})
\]

\end_inset


\end_layout

\begin_layout Standard
By assuming a Poisson distribution for the firing behavior of the neurons,
 it implies that the neurons behave as randomly as possible, and there is
 no underlying control.
 Due to this reason, modeling the behavior using a Poisson distribution
 does not capture the 'bursts' of neuronal activity that is often associated
 with hippocampal pyramidal cells.
 Also, it fails to capture the brief periods of inactivity that is commonly
 observed in these place cells.
 Despite these incompatibilities, modeling the behavior using a Poisson
 distribution works well for reconstruction purposes 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998"

\end_inset

.
 The assumption that the cells fire independently and do not fire simultaneously
 is not entirely true, but only a small fraction of cells fire together.
 Because of its convenience and relatively little impact on reconstruction
 performance, it is assumed that the firing rates of the neurons are not
 dependent on each other 
\begin_inset CommandInset citation
LatexCommand citep
key "Brown1998,Zhang1998,Johnson2008,Johnson2007"

\end_inset

.
 Trying to model the actual dependence of firing rates of neurons on each
 other, and the tendency to fire in bursts, will most likely harm the reconstruc
tion system than improve it.
\end_layout

\begin_layout Section
Reconstructing at fast time scales
\end_layout

\begin_layout Standard
Observing sequential activity in the brain during offline states (as is
 the case in studying preplay and replay activities in the hippocampus),
 both during sleep and awake rest, are different from observing the same
 during actual activity in real time.
 Studies have shown that the timescale of sweeps in the hippocampus during
 sleep are reduced by a factor of up to 
\begin_inset Formula $6-7$
\end_inset

 times 
\begin_inset CommandInset citation
LatexCommand citep
key "Euston2007"

\end_inset

.
 This is because, in an experimental run, the animal is restricted by physical
 constraints, such as barriers and paths, and is also limited by the the
 velocity with which it can move or run in.
 In the case of offline activity, the animal is not restricted by these
 constraints and thus, activity occurs at much smaller timescales.
 The Bayesian reconstruction implementation in 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset

 takes this into account, and allows for multiple timescales, as it primarily
 looks for the existence of sequential activity in the brain during awake
 rest before decision making.
 Similar to the previously mentioned implementation, it is used to reconstruct
 the location of the animal, here denoted as 
\begin_inset Formula $\vec{x}_{t}$
\end_inset

, given any time t and the spiking activity 
\begin_inset Formula $S_{t}$
\end_inset

.
 This implementation consists of two parts, one that reconstructs the location
 based on previous spiking activity, using a dynamic state model, and one
 that corrects the prediction according to new spikes that were fired.
 
\begin_inset Formula 
\[
p(\vec{x}_{t}|S_{t-1})=\int p(\vec{x_{t}}|\vec{x}_{t-1})_{eff}p(\vec{x}_{t-1}|S_{t-1})d\vec{x}_{t-1}
\]

\end_inset


\end_layout

\begin_layout Standard
The above equation is the predictive component of the implementation, and
 finds the location of the animal based on the previous position probability
 estimate.
 It predicts the current position of the animal based on the knowledge of
 previous spikes, up to 
\begin_inset Formula $t-1$
\end_inset

, and the knowledge of the previous location.
 The physical constraint is particularly useful as the rat cannot move more
 than a fixed distance in a short interval of time, and thus can be used
 to localize the reconstruction even further.
 The second component seeks to correct this probability based on the newer
 spike observations, those at 
\begin_inset Formula $t$
\end_inset

 , as given below.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\vec{x}_{t}|S_{t})=\left(\frac{p(\vec{s}_{t}|\vec{x}_{t})p(\vec{x}_{t}|S_{t-1})}{p(\vec{s}_{t}|S_{t-1})}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\vec{s}_{t}$
\end_inset

 is the number of spike observations at time 
\begin_inset Formula $t$
\end_inset

, considering 
\begin_inset Formula $S_{t}=\{s_{1},s_{2},s_{3},...,s_{t}\}$
\end_inset

, which is the spiking history of the neurons.
 The 
\begin_inset Formula $p(\vec{x}_{t}|\vec{x}_{t-1})$
\end_inset

 gives the probability of the position 
\begin_inset Formula $\vec{x}_{t}$
\end_inset

 being occupied based on the knowledge of its previous position.
 This expression can be extended to allow reconstruction ahead of up to
 
\begin_inset Formula $n$
\end_inset

 spaces, by adding in a scaling factor 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p(x_{t+n}|x_{t-1})=\dotsintop_{-\infty}^{\infty}p(x_{n+t}|x_{n+t-1})...p(x_{t}|x_{t-1})dx_{t-1}...dx_{n+t-1}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
p(x_{t+n}|x_{t-1})=p(x_{t}|x_{t-1})^{n}
\]

\end_inset


\end_layout

\begin_layout Standard
This implementation of Bayesian decoding can be used to observe preplay
 in detail as shown by 
\begin_inset CommandInset citation
LatexCommand citet
key "Johnson2007"

\end_inset

.
 Due to the similarity to the T-task experiment by 
\begin_inset CommandInset citation
LatexCommand citet
key "Jones2005"

\end_inset

, we can use as similar reconstruction algorithm to observe the internal
 location representation of the rat as it approaches the decision point.
\end_layout

\begin_layout Section
Minimal implementation
\end_layout

\begin_layout Standard
There is no freely available simple tool that can allow neuroscientists
 to study sequential activity from recorded neural data easily.
 For a very minimal Bayesian based decoding implementation, there are only
 a few core methods that would be needed.
 Gathering from the above cited equations 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998,Johnson2007,Johnson2008"

\end_inset

, a basic implementation would require the calculation of firing rates and
 spatial occupancy (Equation 2.1 and 2.2).
 These two distributions are used to calculate dynamically the reconstructed
 position based on past spiking history and position (Equations 2.15, 2.16)
 and extend the decoded estimation up to several time steps (Equation 2.17).
 To calculate the final estimated position, data from the time window around
 it is used (Equation 2.13).
 The peak of this distribution is then estimated (Equation 2.14).
 These are the core functions that are required for a basic reconstruction
 system.
 However, details such as noise removal, data pre-processing and must be
 carried out to improve the performance of the system.
 One of the main disadvantages of Bayesian decoding is the relatively high
 computation and time complexity.
 To develop of tool of any realistic use, it would be crucial to optimize
 training and reconstruction of data sets to run in a relatively short time.
\end_layout

\begin_layout Section
Performance evaluation of reconstruction
\end_layout

\begin_layout Standard
The principal component of this project is the reconstruction algorithm
 implementation.
 The reconstruction aims to decode the physical location of the animal based
 on neural data alone recorded, at the very least for every single time
 step.
 The most straightforward way to check the accuracy of the implementation
 would be to compare the reconstructed location with the actual location
 of the animal for each time step.
 In the methods discussed in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Decoding-neural-activity"

\end_inset

, location was encoded as a vector of both the 
\begin_inset Formula $x$
\end_inset

 and 
\begin_inset Formula $y$
\end_inset

 co-ordinates.
 To check the accuracy, these co-ordinates can be used to calculate the
 euclidean distance between the two points, as a measure of error in reconstruct
ion.
\end_layout

\begin_layout Standard
A good implementation will be able to predict the location of the animal
 with a high degree of accuracy.
 This depends on several factors like noise in the data and the accuracy
 of the algorithms implemented.
 Neural data tends to have a lot of noisy data and erratic jumps, and may
 hinder performance of the reconstruction.
 It must also be noted that local reconstruction is essentially different
 from non-local reconstruction.
 The implementation must be able to differentiate between local and non-local
 representation, and ignore any physical constraints the system uses to
 restrain local representation of the animal.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/evaluation.png
	lyxscale 40
	scale 65

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Performance evaluation of reconstruction algorithms
\begin_inset CommandInset label
LatexCommand label
name "fig:Performance-evaluation"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Image taken from 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

 - From top to bottom: True position, Bayesian methods (probabilistic),
 Basis methods and the population vector method.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Performance-evaluation"

\end_inset

, the performance of the reconstruction methods can be evaluated by tracing
 the plots of the co-ordinates.
 It can be seen here that the Bayesian methods (labeled as probabilistic)
 with several post processing steps, are the most accurate in reconstruction,
 while the population vector method is a very poor implementation.
 The extensive data from the 
\begin_inset CommandInset citation
LatexCommand citet
key "Jones2005"

\end_inset

 T-maze task provides the basis for the evaluation of reconstruction accuracy
 of the implemented software toolkit.
\end_layout

\begin_layout Chapter
Implementation
\begin_inset CommandInset label
LatexCommand label
name "chap:Implementation"

\end_inset


\end_layout

\begin_layout Standard
This chapter describes the implementation, components, and design choices
 of 
\noun on
ReconTool
\noun default
, and is divided into five sections.
 The toolbox is designed as a simple tool for decoding and requires minimal
 user input.
 The first section of this chapter describes the toolbox's general structure
 and interface.
 The core reconstruction algorithm, described in sections 3.2 and 3.3, is
 based on the work described in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Theoretical-background"

\end_inset

.
 The implementation of the algorithm and the modifications made are described
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Reconstruction"

\end_inset

.
\begin_inset Newline newline
\end_inset


\emph on

\begin_inset Newline newline
\end_inset


\emph default
NOTE:
\emph on
 
\emph default
All figures in this chapter are generated from sample data recorded from
 rats navigating the T-maze task 
\begin_inset CommandInset citation
LatexCommand citep
key "Jones2005"

\end_inset

, and are generated using visualization functions developed as part of 
\noun on
ReconTool
\noun default
, which are described in detail in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Visualizing-the-data"

\end_inset


\emph on
.
\end_layout

\begin_layout Section
Structure of the toolbox
\end_layout

\begin_layout Standard

\noun on
ReconTool
\noun default
 is entirely written and developed in MATLAB.
 It follows a modular design, allowing for newer algorithms to be developed
 and modifications to be made and plugged in easily.
 The toolbox provides a simple interface for neural spike train decoding.
 Several visualization functions are also included in order to visually
 analyse the data, which are described in detail in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Visualizing-the-data"

\end_inset

.
\end_layout

\begin_layout Subsection
User interface
\end_layout

\begin_layout Standard
The main methods of the toolbox are accessed via the MATLAB command line
 interface.
 All of the methods are implemented as functions, and all objects and necessary
 parameters as passed as arguments to the function.
 Most of the functional parameters can be modified, but take on default
 values if not specified by the user.
 For more information, please refer to the documentation in the appendix.
\end_layout

\begin_layout Subsection
Data
\end_layout

\begin_layout Standard
The two primary data types the toolbox works on is the animal's trajectory
 (positional data) and neural spike trains.
 This data can be obtained from any source, as long as they are accessible
 in MATLAB, and in the simple data formats described below.
\end_layout

\begin_layout Subsubsection
Trajectories
\end_layout

\begin_layout Standard
Trajectories are defined in the form of a matrix, with T rows and 3 columns,
 where T is the number of timesteps.
 The first column for every row represents the timestamp, and the second
 and third columns denote the X and Y coordinate of the animal at that timestamp
 respectively.
 The time stamps are provided in units of seconds.
 The coordinates of the animal can be specified in any system of units;
 the reconstructed trajectory is calculated in the same units.
 The trajectories can be obtained from any source or device, and thus can
 use any sampling rate.
 This matrix thus represents a continuous trajectory of the animal, and
 encompasses all positional information and derivable information such as
 velocity of the animal at different points.
\end_layout

\begin_layout Subsubsection
Spike trains
\end_layout

\begin_layout Standard
The spike trains of the neural ensemble is provided in the form of a cell
 array, containing several vectors, where each vector corresponds to a single
 neuron of the ensemble.
 Each vector contains all the time stamps in sequential order at which the
 neuron fires.
 An array of these vectors representing all the neurons gives the spike
 train for the neural ensemble.
\end_layout

\begin_layout Subsection
Main methods
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/toolbox_methods.png
	lyxscale 40
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Training and reconstruction
\begin_inset CommandInset label
LatexCommand label
name "fig:Training-and-reconstruction"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size small
Training a model requires the initial trajectory and the spike trains.
 The model is used by the reconstruction method to decode a new spike train.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are two main methods for the toolbox: training & reconstruction.
 The training phase involves the algorithm generating a model by learning
 from position data and spike trains recorded from the animal.
 The model encompasses all the information that can be gathered from the
 given data.
 It contains parameters such as firing rate maps and spatial occupancy.
 During the reconstruction phase, this trained model is used along with
 the provided spike train, to decode the corresponding trajectory of the
 animal.
 The toolbox also contains other auxillary functions to visualize data,
 which are described in later sections.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Training-and-reconstruction"

\end_inset

 provides an illustration describing the working of these two main methods
 and model creation.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure, explaining model creation
\end_layout

\end_inset


\end_layout

\begin_layout Section
Training
\end_layout

\begin_layout Standard
The training method takes the trajectory of the animal and the corresponding
 spike trains to generate a model.
 The time stamps of the spike trains are expected to lie within the time
 bounds of the recorded trajectory of the animal.
 Spikes occuring outside of these bounds cannot be used for training the
 model as there is no corresponding position of the animal to learn from,
 and are hence, if present, ignored from further processing.
\end_layout

\begin_layout Standard
The training method can also take two other optional parameters: the grid
 size, and training intervals.
 The grid size gives the size of the map that the trajectory is discretized
 into.
 This discretized positional information is used in calculating the parameters
 of the model.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Discretizing-position-data"

\end_inset

 demonstrates the discretization of a small section of a trajectory.
 After reconstruction, the estimated trajectory will also be returned on
 a grid of the same size.
 If not specified by the user, training is carried out by default on a grid
 size of 
\begin_inset Formula $32\times32$
\end_inset

.
 
\end_layout

\begin_layout Standard
The user can also specify training intervals.
 If these are provided, the method only processes information from the points
 of the given trajectory that lie within these intervals.
 Multiple intervals can be specified, allowing the function to process trajector
y information at non-consequent intervals of time.
 By default, training is carried out on a single interval that spans the
 entire input trajectory.
\end_layout

\begin_layout Standard
The resulting parameter model contains all the information in the form of
 firing rates, occupancy matrix, and other parameters such as grid size.
 The goal of generating this parameter model is to provide all the positional
 and spiking information of the neurons in a single, formatted, object,
 that can be used by any decoding algorithm for reconstruction.
 The steps to generate this model are described in the following sub-sections.
\end_layout

\begin_layout Subsection
Discretizing position data
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/continuous_x.png
	lyxscale 40
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
 Before discretization
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/discrete_x.png
	lyxscale 40
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
After discretization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Discretizing position data
\begin_inset CommandInset label
LatexCommand label
name "fig:Discretizing-position-data"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size small
In this figure, only the X-coordinate of the trajectory is illustrated for
 convenience.
 (a) shows the variance of X with time in true units, without any modification.
 (b) shows the same trajectory after being discretized onto a 16x16 grid.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The first step in training a model is the discretization of positional data.
 The given trajectory is in the form of continuous system of coordinates,
 and discretization reduces this onto a smaller coordinate system.
 Once discretized, the location of the animal is represented by a more simpler,
 normalized coordinate system, irrespective of the initial system of units.
 Moreover, for the analysis of local and non-local representations of the
 position of the animal, it is favorable to use a smaller and more discrete
 location system.
 The variance of reconstruction accuracy with grid size is analyzed in section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Effect-of-grid"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure to convert true plot into discretized grid
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Calculating spatial occupancy
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/occupancy.png
	lyxscale 45
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Spatial occupancy visualization
\begin_inset CommandInset label
LatexCommand label
name "fig:Spatial-occupancy-visualization"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size small
This figure shows the locations where the animal visits the most.
 This probability distribution, 
\begin_inset Formula $P(\mathbf{x})$
\end_inset

, represents where the animal is likely to be at any given time.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Spatial occupancy represents the likelihood of the animal being at a location
 at any random point in time.
 For every single time step, the location of the animal is noted.
 In the resulting spatial map, the value at every location represents the
 number of times the animal visits it through the course of the input trajectory.
 The locations where the animal never visits (such as those outside the
 maze), have a value of 0.
 Locations where the animal spends most of its time have higher values.
 It should be noted that this map does not reveal how long the animal stays
 consecutively at a location, but merely represents the number of times
 each location is visited.
\end_layout

\begin_layout Standard
To caclulate the total time spent at any location, the sampling rate of
 the trajectory, 
\begin_inset Formula $\Delta t$
\end_inset

, is multiplied with the number of times the animal visits the location.
 If time spent at any location is represnted by 
\begin_inset Formula $T$
\end_inset

, and 
\begin_inset Formula $C$
\end_inset

 represents the number of times a location 
\begin_inset Formula $\mathbf{x}$
\end_inset

 is visited
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(\mathbf{x})=C(\mathbf{x})\Delta t
\]

\end_inset


\end_layout

\begin_layout Standard
Therefore, the sum of all the values in the spatial occupancy map equals
 the number of timestamps in the trajectory used for training.
 By normalizing this occupancy matrix to sum up to 1, a probability distribution
 of where the animal is most likely to be in, 
\begin_inset Formula $P(\mathbf{x})$
\end_inset

, is obtained.
 This distribution is used by the reconstruction algorithm during decoding,
 which is described in the following sections.
 A visualization of this distribution can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Spatial-occupancy-visualization"

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure that shows P(x)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Quantifying firing rates
\end_layout

\begin_layout Standard
The firing rates of neurons encode most of the information about external
 stimuli experienced by the animal.
 In the context of decoding, the spike train, which is simply a vector of
 time stamps at which the neuron fires, can be condensed to a map of firing
 rates at every location for every neuron.
 The firing rate of a neuron is calculated at every location in the discretized
 map.
 It is obtained by dividing the number of times a neuron fires at a location,
 by the time spent by the animal at that location (described previously
 in Equation 2.2).
 The firing rates of most place cells, as can be seen in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Firing-rates-of"

\end_inset


\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure frates
\end_layout

\end_inset

, tend to be concentrated on certain regions of the map, i.e.
 their corresponding place fields.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/neuron4_firingrate.png
	lyxscale 50
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/neuron5_firingrate.png
	lyxscale 25
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/neuron9_firingrate.png
	scale 25

\end_inset


\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/neuron19_firingrate.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Firing rates of neurons
\begin_inset CommandInset label
LatexCommand label
name "fig:Firing-rates-of"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size small
The firing rates of four random neurons are shown here, to illustrate place
 fields and selective firing at certain locations.
 (a) & (d): Exhibits activity at reward sites; (b) & (c), Active at the
 central arm.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Capturing velocity information
\end_layout

\begin_layout Standard
The animal traverses through the maze at different velocities at different
 points, and this information can be gathered from the trajectory.
 While the spatial occupancy map provides information on which locations
 the animal visits the most, it does not in any way capture the velocity
 of the animal.
 A simple way to gather information about the velocity of the animal is
 by counting the number of timesteps the animal spends 
\emph on
consecutively
\emph default
 at a location.
 This value effectively represents the time the animal spent passing through
 that location.
 The numeric value is inversely proportional to the velocity of the animal
 at that location.
 If the animal spent a relatively large amount of time consecutively at
 a location, it can be said to have a low velocity at that location.
 While this information is not directly used in the reconstruction process,
 algorithms may use the velocity of the animal to modify or 'fix' an already
 reconstructed trajectory for improved accuracy.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Refer section + figure
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/vel1.png
	lyxscale 40
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Capturing velocity information
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size small
This figure shows the maximum time spent by the animal at each location.
 The peaks indicate that the animal spends considerable amount of time at
 reward points.
 The plot also shows that the animal moves quickly through the central arm,
 but tends to slow down near the choice turn.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Parameter model
\end_layout

\begin_layout Standard
The parameter model is a formatted object (a MATLAB cell array) that represents
 all the information learned from the provided trajectory and spike trains
 of the animal.
 The goal of the model is to provide a single object which can be used by
 any reconstruction algorithm to decode a spike train.
 The training method allows multiple models to be trained on the same data,
 but with different parameters such as grid size and intervals.
 These models can be used to decode a specific spike train, and evaluate
 the results of different parameters.
 The information contained in a model are described below.
\end_layout

\begin_layout Enumerate

\emph on
Training parameters
\emph default
\noun on
:
\noun default
 Grid size, training intervals & sampling frequency.
\end_layout

\begin_layout Enumerate

\emph on
Spatial occupancy
\emph default
: A matrix containing the number of times each position was visited, as
 well as a normalized probability distribution.
\end_layout

\begin_layout Enumerate

\emph on
Firing rates
\emph default
: The firing rate for each neuron, for each location on the map.
\end_layout

\begin_layout Enumerate

\emph on
Velocity information
\emph default
: A matrix containing the maximum number of time steps the animal spends
 consecutively at every location.
\end_layout

\begin_layout Section
Reconstruction
\begin_inset CommandInset label
LatexCommand label
name "sec:Reconstruction"

\end_inset


\end_layout

\begin_layout Standard
The reconstruction phase involves using the model created by the training
 method, to reconstruct the trajectory on a given spike train.
 The two main objects passed to the reconstruction method are the parameter
 model and the spike trains to be decoded.
 Several other optional parameters can also be specified, such as reconstruction
 intervals, and algorithm specific variables such as the width of the 
\emph on
time window
\emph default
.
 By specifying reconstruction intervals, we can decode only trajectories
 lying between those intervals.
 When more than one interval is specified, the decoding is carried out on
 each individual interval seperately and the output trajectories are obtained
 in the form of an array.
 The reconstruction method also returns the probability distribution of
 the animal's estimated position at every timestep in the form of a cell
 array, should the user require it.
\end_layout

\begin_layout Subsection
Compression factor
\end_layout

\begin_layout Standard
By default, the trajectory is reconstructed, within the specified interval,
 at the same sampling rate of the initial trajectory the model was trained
 on.
 It might not always be necessary to reconstruct a trajectory at that resolution.
 The compression factor is an optional parameter that can be specified to
 modify this sampling rate.
 By default, the compression factor is set at 1X.
 For example, by having a compression factor of 2X, the number of timesteps
 in the reconstructed trajectory would be half as much as that reconstructed
 at 1X, as it is sampled at half the original sampling rate.
\end_layout

\begin_layout Standard
The compression factor allows for the user to reconstruct at different time
 scales, allowing finer control for observing sequential activity occuring
 at faster time scales.
 The algorithm module, described in the following section, is an independent
 component that decodes one point at a time.
 The compression factor does not depend on the algorithm, it merely controls
 the number of times the algorithm module is called.
 Having higher compression factors reduce computational times, as there
 are far fewer points to decode at.
 Having a high compression factors tend to make the reconstructed plots
 smooth, and this may fail to capture some rapid non-local representations
 of the position of the animal.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure showing 1X vs 10X
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Algorithm
\end_layout

\begin_layout Standard
The algorithm is the core module that is responsible for decoding the spike
 train, and it does so one point at a time.
 It is implemented as a seperate module, so that modifications can be made
 and/or swapped with improved algorithms.
 The method recieves the trained model, firing rates, spike trains, and
 all other parameters required to decode the spike train.
 There are several algorithms to decode a spike train, but the implementation
 described here uses Bayesian inference, based on the work by 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

.
 
\end_layout

\begin_layout Standard
To estimate position at time 
\begin_inset Formula $t$
\end_inset

, only the spikes of the neurons that fall within a small window around
 
\begin_inset Formula $t$
\end_inset

 are observed.
 This window is called the time window, and by default, it is set at 1 second.
 For example, a time window of 1 second implies that all spiking activity
 of neurons falling between 
\begin_inset Formula $t-0.5s$
\end_inset

 and 
\begin_inset Formula $t+0.5s$
\end_inset

 are counted.
 Formally, the width of the time window is represented by 
\begin_inset Formula $\tau$
\end_inset

, and window itself extends between 
\begin_inset Formula $t-\tau$
\end_inset

 and 
\begin_inset Formula $t+\tau$
\end_inset

.
 By sliding this time window forward for every increment in time step 
\begin_inset Formula $t$
\end_inset

, it is possible to reconstruct the positions of the animal over a period
 of time.
 The amount by which the time step is incremented by and time window is
 moved forward by is dictated by the compression factor.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Figure showing time window selection
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/timewindow_3n.png
	lyxscale 40
	scale 45

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Spike selection using time window
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\emph on
In this figure, the spikes of three neurons are represented by vertical
 lines.
 For the decoding process, only the spikes falling within the time window
 (of width 
\begin_inset Formula $\tau$
\end_inset

) are counted for each neuron.
 By sliding this time window forward for every time step, a trajectory is
 reconstructed.
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Bayes' law
\end_layout

\begin_layout Standard
The estimation works by finding the probability that the animal is at a
 location given the spiking activity of the neurons (within the time window).
 Bayes' theorem, in this context of reconstruction, can be written as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x}|\mathbf{n})=\frac{P(\mathbf{n}|\mathbf{x})P(\mathbf{x})}{P(\mathbf{n})}
\]

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\mathbf{x}$
\end_inset

 represents the location vector of the animal, and 
\begin_inset Formula $\mathbf{n}$
\end_inset

 is a vector representing the number of times each neuron fires within the
 time window.
 
\begin_inset Formula $P(\mathbf{n})$
\end_inset

 is the same for every location at a time step, so does not need to be calculate
d directly.
 To find the value of 
\begin_inset Formula $P(\mathbf{n}|\mathbf{x})$
\end_inset

, it is assumed that the neurons fire independently and follow a Poisson
 distribution.
 Neither of these two assumptions is completely true.
 Moreover, assuming a Poisson distribution fails to capture the tendency
 of neurons to fire in quick bursts.
 Despite these shortcomings, it has been shown that these assumptions do
 not negatively affect the accuracy of the reconstruction 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998"

\end_inset

.
 Given these asusmptions, it can be expressed as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{n}|\mathbf{x})=\prod_{i=1}^{N}P(n_{i}|\mathbf{x})=\prod_{i=1}^{N}\frac{(\tau f_{i}(\mathbf{x}))^{n_{i}}}{n_{i}!}\exp(-\tau f_{i}(\mathbf{x}))
\]

\end_inset


\end_layout

\begin_layout Standard
In the above equation, 
\begin_inset Formula $\tau$
\end_inset

 represents the width of the time window.
 Combining this expression with Bayes' law in equation,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x}|\mathbf{n})=P(\mathbf{x})\left(\prod_{i=1}^{N}f_{i}(\mathbf{x})^{n_{i}}\right)exp\left(-\tau\sum_{i=1}^{N}f_{i}(\mathbf{x})\right)
\]

\end_inset


\end_layout

\begin_layout Standard
To normalize this distribution to represent a probability distribution that
 sums up to 1, each value is divided by the total sum of the distribution.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(\mathbf{x}|\mathbf{n})=\frac{P(\mathbf{x}|\mathbf{n})}{\sum_{\mathbf{x}}P(\mathbf{x}|\mathbf{n})}
\]

\end_inset


\end_layout

\begin_layout Subsection
Adding continuity constraints
\end_layout

\begin_layout Standard
Decoding a spike train through an interval involves reconstructing the position
 at every single timestep, to form a trajectory.
 To reconstruct at a single single time stamp, the Bayesian inference algorithm
 works by considering all the spikes that occur within the time window,
 along with positional probability of the animal as well.
 The algorithm does not use any information from a previous estimate in
 the trajectory, but only decodes using local information available at that
 time step.
 Though a generally high level of accuracy is achieved, there are errors
 in the estimated trajectory sometimes due to noise.
 These errors can be seen in trajectory plots in the form of spikes that
 occur in between an otherwise good region of reconstructed trajectory.
 These errors can be reduced if constraints on the distance between the
 current and previous estimated location are established.
\end_layout

\begin_layout Standard
This can be done by adding another correctional step after finding the probabili
ty distribution (the likelihood of the animal being at a location).
 Normally, the location with the highest probability is chosen as the point,
 and is included into the reconstructed trajectory.
 For every location in the distribution, the probability is amplified by
 its proximity to the previous estimated point in the trajectory.
 This essentially reduces the probability of estimates located far away
 from the previous estimate.
 The animal cannot suddenly move to a distant point in the maze within a
 single timestep.
 This correction step, can be further improved by including the varying
 velocity of the animal into the constraints.
 As described in the previous chapter, the parameter model also captures
 velocity information of the animal.
 
\end_layout

\begin_layout Section
Visualizing the data
\begin_inset CommandInset label
LatexCommand label
name "sec:Visualizing-the-data"

\end_inset


\end_layout

\begin_layout Standard
Data visualizations can provide information in a way that is much clearer
 and simpler to understand.
 In the case of neural spike trains and trajectories, visualizations can
 provide a clear picture of place fields and information about the animal's
 movement and location.
 To aid the user, ReconTool has several visualization functions to display
 such information in a graphical format.
 The parameter model that is trained from the data, contains all these informati
on about spike firing rates and the position of the animal.
 By simply providing this model, it is possible to visualize firing rates
 of any neuron, in standard units of Hertz, and the spatial occupancy of
 the animal (please see Appendix on how to use these functions).
 Examples of these visualizations can be seen in figures.
 Functions to visualize data post-reconstruction also exist and are described
 in the following sections.
\end_layout

\begin_layout Subsection
Neuron selectivity & place fields
\end_layout

\begin_layout Standard
Place cells tend to fire in specific regions of the map known as place fields.
 For every location of the map, it is possible to find the neuron for which
 it most selective.
 In other words, every location of the map can be assigned a neuron that
 shows most activity at that location, when compared to all other neurons.
 This map of neuron selectivity can be obtained by finding the neuron with
 the largest firing rate to 
\emph on
total
\emph default
 firing rate ratio for every location of the map.
 If 
\begin_inset Formula $S$
\end_inset

 represents the map of most selective neuron for every location,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
S(\mathbf{x})=\arg\max_{n}\left(\frac{f_{n}(\mathbf{x})}{\sum_{\mathbf{x}}f_{n}(\mathbf{x})}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/selectivity.png
	lyxscale 45
	scale 45

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Neuron Selectivity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The resulting figure shows a map of the most selective neurons for each
 location, where each color represents a neuron, and these can be intepreted
 as place fields.
 This visualization can be used to shed light on whether there is enouhg
 information contained within the neuron firing rates for an accurate reconstruc
tion.
 As with the firing rates, this map can be visualized by simply providing
 the trained parameter model.
\end_layout

\begin_layout Subsection
Plotting trajectories
\end_layout

\begin_layout Standard
The reconstruction algorithm returns a trajectory containing the estimated
 locations, the X and Y coordinates, per timestep.
 Given the actual position of the animal through this interval, it is possible
 to plot these trajectories over each other to visually compare the reconstructe
d trajectory, and observe where deviations occur.
 Due to the difficulty to simultaneously visualize the variance of both
 X and Y coordinates with time in a single 2D plot, the visualization function
 generates two sets of plots, one for each coordinate.
 For example, a high value on the X-coordinate plot would indicate that
 the animal is on the left side of the maze, and a low value would indicate
 the right side of the map.
 Similarly, high and low values for Y would indicate the animal at the upper
 or lower region of the maze respectively.
 When the value of X increases sharply from one end to the other, it indicates
 that the animal is moving across the central arm.
\end_layout

\begin_layout Standard
A trajectory drawn in red indicates the actual trajectory of the animal,
 and its movement across the maze, while the blue line represents the reconstruc
ted trajectory.
 The X-axis spans across the reconstruction interval and is in default units
 of seconds.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/displayPlots_x.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
X coord vs Time
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/displayPlots_y.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Y-coord vs Time
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Trajectory plots
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Trajectory animations
\end_layout

\begin_layout Standard
While plotting trajectories is a useful way to visually study the reconstruction
, it is not useful to easily evaluate non-local sequential activation of
 place cells, representing different regions in the map.
 For this reason, a function to provide an animation of the animal and the
 probability distribution of the estimated position of the animal as given
 by the reconstructed trajectory is provided.
 In this animation, it is possible to see the movement of the animal, whose
 location represented in maroon, overlayed over the probability distribution
 of the estimated location of the animal at that timestep.
 The speed of the animation can be controlled by the user via functional
 parameters.
\end_layout

\begin_layout Section
Methods for data analysis
\end_layout

\begin_layout Standard
The reconstruction method simply provides a trajectory, that contains the
 estimated position at every timestep.
 To evaluate the accuracy of reconstruction for the model, reconstruction
 is carried out over a spike train whos corresponding trajectory is known.
 This could involve either testing on training set (which may introduce
 errors of overfitting), or testing on a holdout set.
 In either method, the actual trajectory is compared with the reconstructed
 trajectory.
 For evaluating the model's accuracy in predicting the location based on
 novel spikes, this section introduces the concept of a null model and methods
 to calculate the coefficent of determination, 
\begin_inset Formula $R^{2}$
\end_inset

, and run cross validation tests.
\end_layout

\begin_layout Subsection
Calculating coefficient of determination
\end_layout

\begin_layout Standard
The coefficient of determination, 
\begin_inset Formula $R^{2}$
\end_inset

, provides a goodness of fit of a statistical model, and measures directly
 how well a model predicts future information.
 In the context of reconstruction, 
\begin_inset Formula $R^{2}$
\end_inset

 would indicate how well the model can be expected to reconstruct on new
 intervals and new spike trains.
 To calculate this value, we would first need to introduce a null model
 to compare our model with.
 
\end_layout

\begin_layout Standard
The null model serves the purpose of a benchmark to evaluate the performance
 of the reconstruction model with.
 It uses a lazy estimation technique and returns the location where the
 animal is most likely to be in, based on input positional data, constantly
 for all points in the interval.
 It does not use any spike data in any way to make its prediction.
 The reconstructed position of the null model can be described by
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\mathbf{x}{}_{null}=\arg\max_{\mathbf{x}}P(\mathbf{x})
\]

\end_inset


\end_layout

\begin_layout Standard
An error in reconstruction at a point in time, 
\begin_inset Formula $t$
\end_inset

, is said to occur if the actual location 
\begin_inset Formula $\mathbf{x}_{real}$
\end_inset

 and the reconstruction location 
\begin_inset Formula $\mathbf{x}_{Bayes}$
\end_inset

 are not identical.
 The degree of error is given by the Euclidean distance between these two
 points.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
error_{t}=distance\left(\mathbf{x}_{model{}_{t}},\mathbf{x}_{real{}_{t}}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
For an interval consisting of several points, the sum of squares of the
 errors at each point is calculated.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
SSE=\sum_{t}(error_{t})^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
To calculate the coefficient of determination, the following formula is
 used.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
R^{2}=1-\frac{SSE_{model}}{SSE_{null}}
\]

\end_inset


\end_layout

\begin_layout Standard
If the value of 
\begin_inset Formula $R^{2}$
\end_inset

 is 0, it means that model performs exactly like the null model, over the
 same data and interval, and hence has poor reconstruction accuracy.
 A value less than zero indicates the model performs worse than the null
 model.
 A value of 1 is ideal, and indicates that the model is perfect and has
 zero error.
 This measure of calculating the accuracy of a model is independent of parameter
s such as grid size.
\end_layout

\begin_layout Subsection
n-fold Cross validation
\end_layout

\begin_layout Standard
Cross validation is a widely used way of estimating the prediction accuracy
 of a machine learning algorithm.
 The data set is split into 
\begin_inset Formula $n$
\end_inset

 random folds, and model training and prediction is repeated 
\begin_inset Formula $n$
\end_inset

 times.
 Each time, 
\begin_inset Formula $n-1$
\end_inset

 folds are used for training the model, and the fold that was not included
 in the training set is used to estimate the true reconstruction error.
 The 
\begin_inset Formula $n$
\end_inset

 error values are averaged to obtain a more robust value.
\end_layout

\begin_layout Standard
Any interval of time specified in the trajectory consists of a discrete
 set of time steps, each of which is estimated during reconstruction individuall
y.
 By considering these time steps to be individual points, it is possible
 to randomize these points to obtain 
\begin_inset Formula $n$
\end_inset

 random folds.
 However, the algorithm, as the one implemented does, may use information
 from the previous estimate to alter or fix a current estimate of the location.
 For this reason, cross validation performs better when the interval is
 divided into 
\begin_inset Formula $n$
\end_inset

 approximately equal segments, where each segment is a continuous interval
 on its own.
\end_layout

\begin_layout Standard
The cross validation function implemented in 
\noun on
ReconTool 
\noun default
returns a vector of 
\begin_inset Formula $n$
\end_inset

 values, which are the coefficient of determination, 
\begin_inset Formula $R^{2}$
\end_inset

, values for the reconstruction carried out on the intervals specified by
 each of the 
\begin_inset Formula $n$
\end_inset

 folds.
\end_layout

\begin_layout Subsubsection
Model Accuracy
\end_layout

\begin_layout Standard
In the context of this report, the accuracy of reconstruction for a model
 refers to the mean of the 
\begin_inset Formula $R^{2}$
\end_inset

 values on all folds, of a 10-fold cross validation on a trajectory.
 In most of the analyses carried out in Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Analysis-using-ReconTool"

\end_inset

, this measure of model accuracy is used.
 
\end_layout

\begin_layout Section
Optimization
\end_layout

\begin_layout Standard
Given the computational and time complexity of decoding algorithms, 
\noun on
ReconTool 
\noun default
aims for a fast, accurate, and flexible reconstruction.
 While training a model is fast, decoding involves calculating the likelihood
 of an animal being present at every location, for every time step in the
 interval, and is a relatively much longer process.
 Decoding involves calculating the number of spikes occuring within the
 time window, which moves with every timestep.
 The algorithm is implemented in a way that makes the maximum use of MATLAB's
 optimized matrix functions.
 Locations where the animal never visits in the training trajectory are
 completely ignored by the algorithm, to eliminate redundant computation.
 The spikes within the time window are counted using a system of dynamic
 indices, that keep track of the first and the last spike within the interval,
 updated only when a new spike falls within the window or an old spike no
 longer falls inside the window.
 The number of spikes within the window is calculated by simply subtracting
 the array indices of the first and last spike within the window.
 This method of counting spikes is more than 10x faster than manually counting
 by checking the occurence of a spike within the bounds of the time window.
 The reason for the huge performance difference is because the method of
 using dynamic indices for counting exploits the fact that the spike train
 is already sorted.
 Finally, to provide the user an estimate of the time remaining, the toolbox
 also includes a wait bar that appears during decoding.
 
\end_layout

\begin_layout Chapter
Analysis using ReconTool
\begin_inset CommandInset label
LatexCommand label
name "chap:Analysis-using-ReconTool"

\end_inset


\end_layout

\begin_layout Standard
In this chapter, 
\noun on
ReconTool 
\noun default
is used on data recorded by 
\begin_inset CommandInset citation
LatexCommand citet
key "Jones2005"

\end_inset

 from rats navigating the T-maze task (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Jones-&-Wilson"

\end_inset

).
 The accuracy of reconstruction is examined along with the different parameters
 that affect it.
 In the final section of this chapter, the relation between errors in reconstruc
tion and velocity of the animal is examined, as this may be indicative of
 the occurences of non-local representations of the postion of the animal,
 and OSA such as replay and preplay.
 
\end_layout

\begin_layout Section
Reconstruction accuracy
\end_layout

\begin_layout Standard
To evaluate the performance of the toolbox, a model was initially trained
 on the entire set on a 
\begin_inset Formula $16\times16$
\end_inset

 bin resolution, and a reconstruction was performed on the entire set, using
 the default parameters (a time window of 1 second and a compression factor
 of 1X).
 The reconstruction was completed in less than 3 minutes, and the model's
 
\begin_inset Formula $R^{2}$
\end_inset

 value was noted.
 In order to analyze the model on a novel testing set, a cross validation
 test was carried out.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Test
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R^{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Full test
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.80
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10-fold CV
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.71
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Reconstruction results
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Cross-validation
\end_layout

\begin_layout Standard
A 10-fold cross validation test was carried out on the trajectory, which
 roughly equates to about 20 minutes of recording time.
 The input trajectory was divided into 10 equal sub trajectories, and the
 training and decoding process was carried out 10 times, each time excluding
 one of these smaller trajectories from training, and evaluating the accuracy
 of reconstruction on it.
 The coefficient of determination, which measures the goodness of fit of
 reconstruction, was averaged for all 10 folds to obtain a more robust value.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="11">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fold #
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $R^{2}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.62
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.80
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.80
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.85
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.75
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.74
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.73
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.72
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.78
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.26
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
10-fold cross validation results
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Results and inference
\end_layout

\begin_layout Standard
The performance of the model during cross validation is slightly poorer
 than testing on the entire training set, but this is due to the effects
 of overfitting while training.
 The more interesting result is the variance of accuracy across the different
 folds of the cross validation test.
 The two folds that had the worst reconstruction accuracy, as compared to
 the others, were either ends of the trajectory.
 In the data set used, the animal is stationary during the initial part
 of the trial, and also at the end of the trial for a considerable amount
 of time.
 While the total duration of the recorded trajectory is about 20 minutes,
 the animal is stationary at a reward site for a few minutes both at the
 beginning and the end of the recording.
 As the results of the cross validation test indicate, the performance of
 reconstruction is poorest at these intervals.
 
\end_layout

\begin_layout Standard
This indicates that the majority of deviations in reconstructed position
 and actual position, or non-local representations of the position of the
 animal, tend to occur when the animal is 
\emph on
stationary
\emph default
, rather than when the animal is moving across the maze.
 
\end_layout

\begin_layout Section
Effect of continuity constraints
\end_layout

\begin_layout Standard
Reconstructing a trajectory involves estimating the position of the animal
 at every single time step contained within the interval.
 Each point is estimated primarily based on the spiking activity of the
 neurons within the time window, and does not use any information from any
 other points in the interval.
 By establishing constraints on the Euclidean distance between the current
 location estimate and the previous timestep's location estimate, it is
 possible to improve accuracy by eliminating random erroneous deviations
 in reconstructed trajectory.
\end_layout

\begin_layout Standard
To study the effect of continuity constraints on accuracy, reconstruction
 was carried out twice on a small interval, on a 
\begin_inset Formula $16\times16$
\end_inset

 bin resolution, once with no constraints on continuity (1-step reconstruction),
 and the second time with a 2D-Gaussian based Euclidean distance constraint
 (2-step).
 The continuity constraint is dynamic; depending on the maximum recorded
 velocity of the animal at that location, larger deviations are either increase
 the likelihood of the current estimate or dampen it.
 The exact implementation of the 2-step constraint can be found in section.
 The single step reconstruction is carried out solely on information gained
 from the neural spikes, whereas the second step uses the distance to the
 previous location estimate to alter the current estimate.
\end_layout

\begin_layout Subsection
Results
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/recon/1step_X.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
1-step, X-coordinate
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/recon/1step_Y.png
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
1-step, Y-coordinate
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/recon/2step_X.png
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
2-step, X-coordinate
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/recon/2step_Y.png
	scale 70

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
2-step, Y-coordinate
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Improving prediction with continuity constaints
\begin_inset CommandInset label
LatexCommand label
name "fig:Improving-prediction"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reconstruction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Coefficient of determination, 
\begin_inset Formula $R^{2}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1-step
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.71
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2-step
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.84
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
As shown by the reconstruction results in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Improving-prediction"

\end_inset

, there are considerably lesser deviations in the 2-step reconstruction.
 It is interesting to note that despite many erroneous deviations being
 eliminated as a result of the 2-step process, there are certain anomalous
 deviations introduced into the trajectory.
 These deviations are a result of the implemented constraint filtering accurate
 estimates of the position.
 However, these anomalies are very few in comparison with the number of
 eliminated deviations, and as the above table shows, the reconstruction
 accuracy improves considerably by implementing continuity constraints.
 
\end_layout

\begin_layout Section
Effect of grid size on accuracy
\begin_inset CommandInset label
LatexCommand label
name "sec:Effect-of-grid"

\end_inset


\end_layout

\begin_layout Standard

\emph on
What grid size produces the least error during reconstruction?
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The grid size determines the size of the map to discretize the position
 data.
 This directly affects how the firings rates are calculated, as the size
 of a location changes.
 By having a large grid size, the number of locations that are mapped increases,
 and this denotes a higher resolution in the trajectory of the animal.
 However, this also introduces larger uncertainties in the reconstructed
 trajectory, and makes it more prone to smaller deviations.
 The reconstruction method returns a probability distribution representing
 the likelihood of the animal being at a location of the map.
 To compare it with the actual location, the reconstructed trajectory, which
 is in units of grid squares, is converted back to the actual units of measurmen
t that was provided during training.
 This is estimated by finding the location of the center of the grid square
 in true units that represents the location of the animal.
 
\end_layout

\begin_layout Standard
For example, consider a trajectory that varies from 0 to 200cms across both
 axes (a maze of 
\begin_inset Formula $200\times200$
\end_inset

 cm) trained on model with a grid size of 
\begin_inset Formula $10\times10$
\end_inset

.
 This would mean that every square in the discretized map represents a region
 of 20 cm
\begin_inset Formula $^{2}$
\end_inset

.
 The reconstruction algorithm returns a single address of a grid square
 that it predicts is the most likely position of the animal.
 If the estimated postion is (5,5), this is converted to real units (cms),
 by finding the center of the square.
 This is calculated by multiplying the grid coordinates by the grid square
 dimensions, and subtracting half the width and height to get the center
 of the grid square.
 In this example,
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
x_{real}=y_{real}=(5\times20cm)-(\frac{20cm}{2})=90cm
\]

\end_inset


\end_layout

\begin_layout Standard
Therefore (5,5) in grid cell units can be converted to (90,90) cms.
 However this still leaves a signficant room for error, as the animal's
 actual location could be anywhere in the 20 cm
\begin_inset Formula $^{2}$
\end_inset

 square centered at (90,90).
 The algorithm cannot resolve the location of an animal beyond the resolution
 it has been trained on.
 Thus, grid size directly affects reconstruction accuracy.
 
\end_layout

\begin_layout Standard
In this analysis, the grid size was varied from 
\begin_inset Formula $2\times2$
\end_inset

 upto 
\begin_inset Formula $32\times32$
\end_inset

, to study the variance of error.
 As with other analysis, the coefficient of determination was calculated
 to represent the accuracy of prediction of the model.
 Several models with varying grid size were trained and their averaged 
\begin_inset Formula $R^{2}$
\end_inset

 value over a 10-fold cross-validation test was observed.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/grid_lovejoy.png
	scale 75

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Variance of accuracy with grid size
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Results
\end_layout

\begin_layout Standard
As can be seen in the graph, having extremely low grid sizes negatively
 affects the reconstruction.
 This can be explained because during the estimation of true units from
 grid size, having a very low grid resolution results in very few possible
 locations.
 In simple terms, having fewer grid squares is a very poor resolution for
 estimating location.
 Figure shows that the plot plateaus after a certain point, indicating that
 increasing grid resolution beyond a certain point does not improve accuracy.
 The two main important results that can be inferred from this are
\end_layout

\begin_layout Itemize
Increasing the grid size does not improve accuracy beyond a certain point.
 Thus, it is favorable to reconstruct on smaller grid sizes, as there is
 no loss in accuracy, but much faster computation times.
\end_layout

\begin_layout Itemize
On the data used for testing, the most accurate model is the one that is
 trained on a grid size of 
\begin_inset Formula $9\times9$
\end_inset

 figure.
 This size is ideal for reconstruction as it corresponds to that size where
 the pathways of the maze can be represented by the width of one grid square
 (figure).
\end_layout

\begin_layout Section
Effect of firing rates on accuracy
\end_layout

\begin_layout Standard

\emph on
How important are firing rates of place cells in encoding information about
 the position of the animal?
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
The firing rate of a neuron encodes most of the information of stimuli.
 In the context of place cells, the firing rate of the cells encode information
 on the locational representation of the animal in the hippocampus.
 For this analysis, data from two animals were taken, both navigating the
 same T-maze task, but one whose recorded neurons show a considerably lesser
 firing activity on average across the ensemble.
 The mean firing rate shown in the table below, was calculated by finding
 the mean of the maximum firing rates of each neuron across all locations
 on the map.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Frates-AB"

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Animal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mean firing rate
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $9.6Hz$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
B
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $19.7Hz$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Reconstruction over the entire interval was carried out and the accuracy
 of the model was determined.
 In order to see the variance of accuracy over several trials, the test
 was repeated by varying grid sizes from 
\begin_inset Formula $2\times2$
\end_inset

 to 
\begin_inset Formula $32\times32$
\end_inset

, similar to the evaluation carried out in the previous analysis.
 This method of evaluating accuracy will indicate the highest accuracy possible,
 for the given spike train, by varying the grid size.
 
\end_layout

\begin_layout Subsection
Results
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/frate_diffs.png
	scale 65

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Mean firing rate for each neuron
\begin_inset CommandInset label
LatexCommand label
name "fig:Frates-AB"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/R2_firingrates_gridsize.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Variance of accuracy with grid size
\begin_inset CommandInset label
LatexCommand label
name "fig:R2-AB"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Accuracy of reconstruction with different firing rates
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
It can be seen from figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:R2-AB"

\end_inset

, that the accuracy of reconstruction on data from animal B is consistently
 and considerably higher than that of animal A.
 Also, as shown in the previous section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Effect-of-grid"

\end_inset

, there is no improvement in either animal's model accuracy after a certain
 grid size.
 The main result gathered here is that
\end_layout

\begin_layout Itemize
Place cells with higher firing rates encode more spatial information, and
 result in models with higher accuracy during reconstruction.
\end_layout

\begin_layout Section
Non-local representations of location
\end_layout

\begin_layout Standard
Errors in a reconstructed trajectory are likely to represent non-local represent
ations of the position of the animal.
 Sequential activity representing locations previously visited (replay)
 and locations not yet visited (preplay) have been observed in the rodent
 hippocampus.
 Moreover, preplay occurences have been observed at decision points 
\begin_inset CommandInset citation
LatexCommand citep
key "Johnson2007"

\end_inset

.
 The T-maze task (section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Jones-&-Wilson"

\end_inset

) also involves a similar choice turn, and using 
\noun on
ReconTool
\noun default
, it is possible to identify occurences of non-local representations at
 junction points.
 
\end_layout

\begin_layout Standard
The reconstruction was carried out over an entire trajectory recording roughly
 equal to twenty minutes.
 The reconstructed trajectory was sampled at the same rate as the initial
 trajectory, for a strong comparison.
 An error at a timestep is said to occur when the actual position and the
 reconstructed position do not coincide, and the degree of error is given
 by the Euclidean distance of the actual and reconstructed locations on
 the map.
 A significant deviation occurs when this Euclidean distance exceeds a certain
 threshold.
 Given that the position of the animal is known throughout the trajectory,
 the locations where significant deviations occur are noted.
 
\end_layout

\begin_layout Standard
However, this map does not take into account the number of times the animal
 visits a location.
 If we assume a constant rate of error throughout the reconstruction, the
 locations where most deviations occur according to the unnormalized map,
 would correspond to the regions where the animal visits the mosts.
 To eliminate this, the map is normalized by taking into account the spatial
 occupancy map of the animal, which represents the number of times the animal
 visits each location.
\end_layout

\begin_layout Subsection
Normalization
\end_layout

\begin_layout Standard
The map of deviation occurences contains the number of times significant
 deviations occur at every location.
 The spatial occupancy contains the number of times the animal visits each
 location.
 The map can be normalized by dividing the deviation count by the corresponding
 spatial occupancy count, for every location on the map.
 Once normalized, the map represents locations which have a high deviation
 count to spatial occupancy ratio.
 As can be seen in figure, this method eliminates the effects of the animal
 spending large amounts of time when counting the number of deviations.
 
\end_layout

\begin_layout Standard
By varying the threshold for classifying a significant deviation, different
 normalized maps of occurences of deviations was obtained, shown in (Figure).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/100_not_normalized.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Before normalization
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/100.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
After normalization
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Deviation count normalization with spatial occupancy
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center

\size small
Merely counting locations where deviations occur does not actually represent
 regions of high non-local sequential activity, as it does not take into
 account the number of times the animal visits it.
 By normalizing this count with the spatial occupancy of the animal, the
 map then represents locations with high deviations.
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/50.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
>50 cms
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/75.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
>75 cms
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/100.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
>100 cms
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/125.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
>125 cms
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/150.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
>150 cms
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Images/Deviations/175.png
	scale 40

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
>175 cms
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Deviation occurences at different thresholds
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Direction-specific deviations
\end_layout

\begin_layout Standard
It can be seen from figure that a significant amount of deviations occur
 at the choice point.
 As described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Jones-&-Wilson"

\end_inset

 on the T-maze task, the rat may either be on a choice trial, where it moves
 towards the choice point and has to make a decision, or on the guided trial,
 where it is led back by movable barriers.
 To identify the locations of non-local representations of the animal on
 each trial, a small script to individually count only deviations occuring
 when the rodent is moving 
\emph on
towards
\emph default
 and 
\emph on
away 
\emph default
the choice point was implemented.
 The resulting maps are shown in figure.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Trial
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deviations >25cm
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Deviations >40cm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Choice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
64
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reward
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Deviation errors at choice point
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Direction_deviations/towards.png
	lyxscale 30
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Choice trial - towards the choice point
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space ~
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Direction_deviations/away.png
	lyxscale 30
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Guided trial - away from the choice point
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Direction-specific deviations 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Results
\end_layout

\begin_layout Standard
On the reconstructed trajectory, locations where significant deviations
 occur were noted.
 The threshold for deviations was also varied to analyze the relationship
 between location and the degree of deviations.
 The resulting maps are shown in figure.
 We can infer that
\end_layout

\begin_layout Itemize
Large reconstruction errors tend to occur at the reward sites, indicating
 the occurences of non-local representations of the position of the animal
 when it is either slow or stationary, possibly replay occurences during
 awake rest.
\end_layout

\begin_layout Itemize
A large number of deviations also occur at the choice point, similar to
 those found by 
\begin_inset CommandInset citation
LatexCommand citet
key "Johnson2007"

\end_inset

.
 By analyzing the direction of movement of the animal during these deviations,
 it was found that 
\emph on
they occur almost exclusively during the choice trial, as the animal heads
 towards the choice point, and seldom when the animal is on the guided trial
\emph default
.
 This strongly indicates the occurences of sequential activity representing
 future locations (preplay), responsible for the mental exploration of new
 spaces and evaluation of consequences before taking a decision.
 
\end_layout

\begin_layout Chapter
Discussion & Evaluation
\begin_inset CommandInset label
LatexCommand label
name "chap:Discussion"

\end_inset


\end_layout

\begin_layout Standard
This chapter explores the decision choices during the development of the
 toolbox, and also provides a discussion on the degree to which the initially
 set goals were met.
 The results and the inferences of the analyses carried out using 
\noun on
ReconTool
\noun default
 are also discussed.
\end_layout

\begin_layout Section
Toolbox framework
\end_layout

\begin_layout Standard
The primary aim of this project was to create a toolbox to decode neural
 activity and reconstruct trajectories.
 There are no toolboxes available freely for neuroscientists to decode neural
 correlates, and 
\noun on
ReconTool 
\noun default
fills that gap.
\end_layout

\begin_layout Standard
MATLAB was chosen for the development of the toolbox for easy use and compatibil
ity with other toolboxes for neural analyses such as MQL 
\begin_inset CommandInset citation
LatexCommand citep
key "Jahans-Price2010"

\end_inset

, and also due to the availability of built-in statistical analysis and
 graphical plotting tools.
\end_layout

\begin_layout Standard
One of the main objectives during the development of the toolbox was to
 make it extremely flexible for modifications in the future.
 There are several neural decoding techniques that exist, and the implemented
 Bayesian inference is just one of them.
 Methods such as basis pattern matching, though they use completely different
 ways of estimating the position of the animal, still require firing rates
 and other common parameters.
 This toolbox provides a way for training a model and reconstruction, regardless
 of the algorithm used.
 The algorithm itslef is defined as a seperate module, and decodes a single
 point at a time.
 Different algorithms can be made and plugged in, with little to no change
 required in the other modules.
\end_layout

\begin_layout Standard
Initially, a graphical user interface was planned, but was discarded due
 to the extremely simple text commands the toolbox works on.
 The user only needs to provide the essential data objects, such as the
 initial trajectory and the spike trains for training, and the new spike
 train for decoding.
 All other parameters, both for the algorithm and the reconstruction method,
 can be provided through optional function arguments.
 If not specified, the toolbox defaults these parameters to default values,
 whose values were chosen based on model generation and reconstruction on
 different data sets from different animals and sources, that are expected
 to provide a estimate an accurate trajectory.
 To fully utilize the functionalities of the toolbox, the user will have
 to vary the parameters, as data from different sources tend to differ in
 ways that slightly affects accuracy.
 Detailed documentation about the working, returned data objects, and input
 arguments are provided for every function in the toolbox, which can be
 accessed via MATLAB's 
\noun on
help
\noun default
 command, or in the software documentation (see Appendix).
\end_layout

\begin_layout Subsection
Flexibility in error analysis
\end_layout

\begin_layout Standard
As with any machine learning algorithm, several methods exist to evaluate
 the accuracy of reconstruction.
 While efficient methods to calculate coefficient of determination of the
 model are provided within the toolbox (section), the user may prefer to
 use other methods of error analysis.
 For this reason, 
\emph on
reconstruction_error
\emph default
 function returns a matrix of values that can be used in different error
 metrics.
 
\end_layout

\begin_layout Standard
It contains the actual location of the animal, both in real and grid location
 units, and the estimated location in real and grid location units as well,
 for every time step.
 These locations represent the estimated and the expected value, and they
 represent the will form the core of any error metric.
 In the implementation, the Euclidean distance between these two locations
 are also provided.
 
\end_layout

\begin_layout Section
The algorithm implementation
\end_layout

\begin_layout Standard
The Bayesian inference algorithm was chosen to be implemented because of
 its higher accuracy when compared to other techniques such non-probabilistic
 based approaches such as pattern matching 
\begin_inset CommandInset citation
LatexCommand citep
key "Zhang1998"

\end_inset

.
 The algorithm was implemented, and found to have a very high level of accuracy.
\end_layout

\begin_layout Standard
Decoding at a simple point involves the count of spikes occuring within
 a specified time window, and the positional occupancy distribution of the
 animal.
 This information is found encapsulated within the trained model.
 The two biggest assumptions made by the algorithm are that the place cells
 fire independent to each other and follow a Poisson distribution 
\begin_inset CommandInset citation
LatexCommand citet
key "Zhang1998"

\end_inset

.
 However, both these assumptions are not true, as place cells are sometimes
 dependent on each other and fire along with other place cells.
 By assuming a Poisson distribution for the occurence of spikes, the tendancy
 of neurons to fire in a series of short durations of high spiking activity,
 or 
\begin_inset Quotes eld
\end_inset

bursts
\begin_inset Quotes erd
\end_inset

.
 These assumptions, though incorrect, provide the advantage of being simple
 to model mathematically, with minimal loss in accuracy.
 As can be seen by the results of the implementation, the reconstruction
 algorithm shows a high level of accuracy.
\end_layout

\begin_layout Subsection
Efficiency
\end_layout

\begin_layout Standard
Despite the obvious advantage of a much higher accuracy in estimating positions
 as compared with other reconstruction methods, the main disadvantage of
 using Bayesian inference is the computational and time cost.
 Counting the number of spikes within a certain interval, requires finding
 the indices of spikes within a vector.
 While this on its own is not an expensive task, it is repeated for every
 neuron, for each location in the map, and for every timestep.
 This results in large computation times for even moderately long trajectories.
\end_layout

\begin_layout Standard
In the very first unoptimized implementation of the algorithm, reconsruction
 over a 5 minute interval (~ 9000 time steps) took approximately 8 hours.
 In the current state of the implementation, the algorithm can decode the
 same 5-minute interval, reproducing the exact same results, in less than
 2 minutes.
 
\end_layout

\begin_layout Standard
A considerable amount of time was spent on optimizing code.
 MATLAB's superiority over other languages comes in its handling of matrices
 and extremely fast matrix operations.
 This was taken into account and several nested for loops were eliminated,
 and replaced with equivalent matrix operations.
\end_layout

\begin_layout Standard
Finding the number of spikes falling within the time window involved a lot
 of calls to the vector search function.
 This method of searching did not take into account the fact that the provided
 spike trains are already sorted.
 The method of dynamic indices, descriped in detail in the implementation
 chapter, exploits the fact that the vectors are sorted before hand, and
 counts the number of spikes by calculating the difference between the indices
 of the first and last spike of the time window.
 This method of counting spikes provided the single biggest improvement
 in execution time.
 Several other optimization techniques were carried out, such as data sharing
 between individual modules, in order to prevent redundant calculations
 and computation.
 
\end_layout

\begin_layout Standard
The final implementation of the algorithm works extremely fast as compared
 to the unoptimized code, and can reconstruct an entire 20-minute trajectory,
 sampled at 30 Hz, at a bin resolution of 
\begin_inset Formula $16\times16$
\end_inset

 in under 7 minutes on a desktop computer.
 It is this speed of the algorithm that permitted more complicated analyses
 like cross-validation and studying the effects of grid size on accuracy.
\end_layout

\begin_layout Subsection
Flexibility
\end_layout

\begin_layout Standard
The core algorithm itself is implemented as a seperate module, and is less
 than 50 lines of code.
 All core objects such as the trained model and spike trains are passed
 to the algorithm when it is called.
 It is called once per point, and returns the estimated location of the
 animal, along with a probablity distribution across the map.
 Changes can be made to the algorithm here, or an entirely new algorithm
 can be devised, and plugged into the toolbox.
 
\end_layout

\begin_layout Section
Reconstruction accuracy
\end_layout

\begin_layout Standard
The toolbox and the algorithm implementation was found to have a high level
 of reconstruction accuracy.
 The reconstructions were carried out on several sources of data, recorded
 on rats navigating the T-maze decision task 
\begin_inset CommandInset citation
LatexCommand citet
key "Jones2005"

\end_inset

.
 The accuracy was measured by calculating the coefficient of determination,
 or goodness of fit of the reconstruction, by comparing the estimated trajectory
 with that of a null or zero model.
 The null model uses minimal processing and serves as a benchmark to evaluate
 other models.
 Cross validation tests were also carried out to observe the accuracy on
 new spike trains, and to eliminate the effect of overfitting.
 
\end_layout

\begin_layout Standard
The coefficient of determination for most reconstruction models were around
 0.8, with 1 being ideal indicating zero error.
 Since the goal of this project is 
\emph on
not
\emph default
 to recreate trajectories with minimal error, but instead reproduce internal
 representations of the position of the animal as experienced by the animal
 itself, deviations in reconstruction and actual trajectory are expected,
 as they potentially represent sequential activity corresponding to places
 the animal has previous visited or yet to visit.
 As shown by these results, the reconstruction algorithm was succesfully
 implemented with a high level of accuracy.
\end_layout

\begin_layout Subsection
Factors affecting accuracy
\end_layout

\begin_layout Standard
As reconstruction on different data sets, along with varying parameters,
 yielded significant variations in accuracy, the factors affecting it were
 studied.
 The effect of grid size and firing rates was examined.
\end_layout

\begin_layout Standard
Grid size gives the resolution of the map on which the model is trained
 and reconstruction is carried out, and hence directly affects the accuracy.
 As expected, it was found that having extremely low grid sizes leads to
 poor accuracy in reconstruction, because of the low resolution of the mapping
 subsequent errors in converting to real units.
 Interestingly however, it was found that increasing grid size beyond a
 certain point does 
\noun on
not
\noun default
 improve (or degrade) accuracy (Figure).
 This result indicates that carrying out reconstructions on larger grid
 sizes has no benefit but only causes the computation time to exponentially
 worsen.
\end_layout

\begin_layout Standard
For studying the effect of rate of neural spikes on reconstruction, the
 accuracy was evaluated on two different sets of data, one with neurons
 with generally high firing rates, and another with neurons with lower firing
 rates.
 The results indicate that higher firing rates considerably improve reconstructi
on accuracy, and this supports the idea that most information about the
 stimulus is encoded within the firing rate of the neurons (Rate coding).
 
\end_layout

\begin_layout Section
Non-local representations
\end_layout

\begin_layout Standard
Errors in reconstruction of the position may arise either due to the algorithm
 and insufficient information contained within the spikes, or due to occurences
 non-local representations of position of the animal.
 The two specific types of OSA that are of interest are representations
 of past locations (replay), and representations of future locations (preplay).
\end_layout

\begin_layout Standard
Mapping out locations of the animal where non-local sequences were observed
 reveals that significant deviations occur at the choice point, and at the
 reward sites.
 Further analysing the occurences of deviations, it was found that mostly
 all deviations occuring near the decision point occur during the choice
 trial, and this strongly indicates preplay of future locations to aid the
 animal in decision making.
 
\end_layout

\begin_layout Section
Future work
\end_layout

\begin_layout Standard
This project establishes a toolbox for reconstructing trajectories based
 on neural spikes, and provides a flexible framework for modifications.
 
\end_layout

\begin_layout Subsection
Expanding the toolbox
\end_layout

\begin_layout Standard
The current implementation of the toolbox uses only Bayesian inference for
 decoding.
 The toolbox can be expanded to incorporate other algorithms, such as basis
 functions, and pattern matching, providing the user with options to choose
 a decoding algorithm.
 Implementing multiple algorithms also provides a way for smoothing out
 errors by comparing the reconstruction results of different algorithms.
\end_layout

\begin_layout Subsection
Further analyses
\end_layout

\begin_layout Standard
In this project, 
\noun on
ReconTool
\noun default
 has been used succesfully to identify high amounts of non-local place cell
 activation at reward sites, suggesting replay of recently experienced memories,
 and at the junction points as the animal approaches it, suggesting preplay
 of place cells representing future locations ahead of the animal.
 While the occurences of deviations have been identified, future analysis
 can be carried out to investigate the actual locations represented by these
 deviations, as this would provide further insight into the role of the
 hippocampus in memory consolidation and mental exploration of novel spaces.
 
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Standard
A flexible toolbox, 
\noun on
ReconTool
\noun default
, was developed for neural spike decoding and trajectory reconstruction.
 The algorithm implemented uses Bayesian inference to estimate the position
 of the animal, and was found to have a high level of accuracy.
 The algorithm was heavily optimized to improve the speed of reconstruction.
 The toolbox also contains several functions to visualize data, and methods
 to analyze reconstruction errors and perform cross-validation tests.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Data recorded from rats navigating the T-maze decision task 
\begin_inset CommandInset citation
LatexCommand citep
key "Jones2005"

\end_inset

 was analysed using 
\noun on
ReconTool
\noun default
.
 The reconstruction accuracy along with the parameters that affect it, and
 errors in reconstruction were analysed.
 
\end_layout

\begin_layout Itemize
Increasing the grid size while training models improves the accuracy of
 reconstruction only up to a certain point.
\end_layout

\begin_layout Itemize
Place cells with higher firing rates encode more spatial information, and
 result in models with higher reconstruction accuracy.
\end_layout

\begin_layout Itemize
Significant deviations between actual and reconstructed position occur at
 reward sites when the animal is stationary, suggesting the reactivation
 (replay) of place cells corresponding to previously visited locations in
 the maze.
\end_layout

\begin_layout Itemize
Almost all of the significant deviations at the choice point were found
 to occur as the animal approached it to make a choice turn, and not when
 moving away from it, indicating that these non-local sequential activity
 represent future locations ahead of the choice point (preplay) to evaluate
 consequences of the choice before making a turn.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "references7"
options "harvard"

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Appendix A: Source code
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "Code/training.m"
lstparams "basicstyle={\\tiny},breaklines=true,caption={Training Method},emptylines={*0},frame=tb,language=Matlab,title={Training}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "Code/reconstruction.m"
lstparams "basicstyle={\\tiny},breaklines=true,caption={Reconstruction},emptylines={*0},frame=tb,language=Matlab,title={Reconstruction}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "Code/bayes_algorithm.m"
lstparams "basicstyle={\\tiny},breaklines=true,caption={Algorithm},emptylines={*0},frame=tb,language=Matlab,title={Algorithm}"

\end_inset


\end_layout

\begin_layout Chapter
Appendix B: ReconTool documentation
\end_layout

\end_body
\end_document
